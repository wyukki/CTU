{"version":3,"sources":["util/Routes.js","util/Routing.js","action/ActionType.js","action/AsyncStatus.js","action/SyncActions.js","action/AsyncActions.js","component/category/CategoryList.js","util/Constants.js","component/Content.js","component/misc/Mask.js","images/product.png","component/product/CategoryProducts.js","component/login/Login.js","component/category/CreateCategory.js","component/message/Message.js","component/message/Messages.js","component/product/ProductDetail.js","component/product/EditProduct.js","component/product/Product.js","component/cart/Cart.js","component/register/Register.js","component/order/Order.js","component/MainView.js","reducer/Reducers.js","store/Store.js","App.js","serviceWorker.js","index.js"],"names":["Routes","home","name","path","categories","category","createCategory","product","createProduct","cart","order","setPathParams","params","Object","getOwnPropertyNames","forEach","n","replace","Routing","_history","createHashHistory","transitionTo","route","this","push","pathname","transitionToHome","getHistory","ActionType","LOAD_USER","LOAD_CATEGORIES","LOAD_CATEGORY_PRODUCTS","LOGIN","LOGOUT","REGISTER","CREATE_CATEGORY","SELECT_CATEGORY","LOAD_CATEGORY","LOAD_PRODUCT","CREATE_PRODUCT","UPDATE_PRODUCT","REMOVE_PRODUCT","ADD_TO_CART","REMOVE_FROM_CART","CREATE_ORDER","LOAD_ORDER","PUBLISH_MESSAGE","DISMISS_MESSAGE","AsyncStatus","REQUEST","SUCCESS","ERROR","asyncActionRequest","action","assign","asyncStatus","asyncActionSuccess","asyncActionFailure","error","selectCategory","categoryId","id","type","publishMessage","message","axios","Axios","create","SERVER_URL","process","REACT_APP_SERVER_URL","REACT_APP_MOCK_REST_API","mock","MockAdapter","delayResponse","onGet","reply","firstName","lastName","username","role","onPost","loggedIn","success","products","amount","price","slice","config","url","substring","lastIndexOf","Number","onPut","onDelete","location","created","items","loadCategories","dispatch","get","then","resp","data","catch","response","loadCategory","loadCategoryProducts","login","password","URLSearchParams","append","post","loadUser","user","logout","window","reload","loadProduct","productId","extractIdFromLocation","headers","addToCart","item","addToLocalCart","put","removeFromCart","removeFromLocalCart","delete","loadOrder","orderId","CategoryList","_selectCategory","cat","e","props","preventDefault","Card","CardHeader","CardBody","ListGroup","_renderCategories","map","ListGroupItem","to","React","Component","connect","state","Constants","ROLE_ADMIN","MESSAGE_DISPLAY_COUNT","MESSAGE_DISPLAY_TIMEOUT","userRole","Jumbotron","fluid","Container","className","expected","actual","ButtonToolbar","Button","color","onClick","Mask","style","width","height","margin","size","text","defaultProps","CategoryProducts","_createProduct","_openProduct","catId","match","loadProducts","prevProps","catName","Row","Col","md","_renderProducts","length","toRender","row","i","len","src","alt","selectedCategory","Login","_onChange","upd","target","value","setState","_login","onClose","_cancel","Modal","isOpen","open","ModalHeader","ModalBody","Label","Input","bsSize","onChange","CreateCategory","_onCreate","_onCancel","Message","_toggleAlert","dismissMessage","timer","setTimeout","clearTimeout","Alert","toggle","messages","count","m","ProductDetail","_updateItemCount","cnt","itemCount","_addToCart","productImg","_renderAmount","min","max","Badge","EditProduct","_onSave","_isNew","updateProduct","_onRemove","removeProduct","_onNameChange","_onNumChange","change","_onAddCategory","selected","concat","typeahead","current","clear","_onRemoveCategory","newCategories","splice","indexOf","createRef","undefined","step","ref","options","_getCategoriesToAdd","labelKey","icon","faTimes","existing","filter","find","cc","Product","_toggleTab","tabId","activeTab","component","_renderProductTabs","Nav","tabs","NavItem","NavLink","classNames","active","TabContent","TabPane","withRouter","Cart","_updateItemAmount","trim","newAmount","removeItem","addItem","_createOrder","createOrder","reduce","acc","val","Table","striped","_renderItems","_calculateCartPrice","Register","_register","profile","passwordConfirm","register","_passwordsMatch","disabled","_isValid","Order","Date","toLocaleString","MainView","_openLogin","loginOpen","_closeLogin","_openRegister","registerOpen","_closeRegister","_logout","_openCart","_renderDropdown","loading","exact","Content","Navbar","light","expand","NavbarBrand","href","navbar","title","faShoppingCart","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","_renderRegisterItem","_renderLogoutItem","_renderLoginItem","DropdownItem","rootReducer","combineReducers","presentItem","it","newItem","newState","newArr","loggerMiddleware","createLogger","store","createStore","reducer","applyMiddleware","thunk","App","appStore","history","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"+YAWeA,EAXA,CACXC,KAAM,CAACC,KAAM,OAAQC,KAAM,KAC3BC,WAAY,CAACF,KAAM,aAAcC,KAAM,eACvCE,SAAU,CAACH,KAAM,WAAYC,KAAM,2BACnCG,eAAgB,CAACJ,KAAM,iBAAkBC,KAAM,sBAC/CI,QAAS,CAACL,KAAM,UAAWC,KAAM,wBACjCK,cAAe,CAACN,KAAM,gBAAiBC,KAAM,oBAC7CM,KAAM,CAACP,KAAM,OAAQC,KAAM,SAC3BO,MAAO,CAACR,KAAM,QAASC,KAAM,oBCL1B,SAASQ,EAAcR,EAAMS,GAIhC,OAHAC,OAAOC,oBAAoBF,GAAQG,SAAQ,SAAAC,GACvCb,EAAOA,EAAKc,QAAQ,IAAMD,EAAGJ,EAAOI,OAEjCb,EAGX,IAAMe,EAAU,CACZC,SAAUC,cAEVC,aAHY,SAGCC,GAAqB,IAAdV,EAAa,uDAAJ,GACrBT,EAAOmB,EAAMnB,KACjBA,EAAOQ,EAAcR,EAAMS,GAC3BW,KAAKJ,SAASK,KAAK,CAACC,SAAUtB,KAGlCuB,iBATY,WAURH,KAAKF,aAAarB,EAAOC,OAG7B0B,WAbY,WAcR,OAAOJ,KAAKJ,WAILD,I,iHCLAU,EAvBI,CACfC,UAAW,YACXC,gBAAiB,kBACjBC,uBAAwB,yBACxBC,MAAO,QACPC,OAAQ,SACRC,SAAU,WACVC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,cAAe,gBACfC,aAAc,eACdC,eAAgB,iBAChBC,eAAgB,iBAChBC,eAAgB,iBAChBC,YAAa,cACbC,iBAAkB,mBAClBC,aAAc,eACdC,WAAY,aAEZC,gBAAiB,kBACjBC,gBAAiB,mB,iBCdNC,EANK,CAChBC,QAAS,UACTC,QAAS,UACTC,MAAO,SCMJ,SAASC,EAAmBC,GAC/B,OAAOxC,OAAOyC,OAAOD,EAAQ,CACzBE,YAAaP,EAAYC,UAI1B,SAASO,EAAmBH,GAC/B,OAAOxC,OAAOyC,OAAOD,EAAQ,CACzBE,YAAaP,EAAYE,UAI1B,SAASO,EAAmBJ,EAAQK,GACvC,OAAO7C,OAAOyC,OAAOD,EAAQ,CACzBE,YAAaP,EAAYG,MACzBO,UAqCD,SAASC,EAAetD,GAE3B,OADAa,EAAQG,aAAarB,EAAOK,SAAU,CAACuD,WAAYvD,EAASwD,KACrD,CACHC,KAAMlC,EAAWQ,gBACjB/B,YAuCD,SAAS0D,EAAeC,GAC3B,MAAO,CACHF,KAAMlC,EAAWkB,gBACjBkB,W,qBCrFFC,EAAQC,IAAMC,SAEdC,EAAaC,oIAAYC,sBAAwB,GAKvD,GAAID,oIAAYE,wBAAyB,CAErC,IAAMC,EAAO,IAAIC,IAAYR,EAAO,CAACS,cAAe,MAEpDF,EAAKG,MAAM,sBAAsBC,MAAM,IAAK,CACxCC,UAAW,YACXC,SAAU,SACVC,SAAU,kBACVC,KAAM,UAGVR,EAAKS,OAAO,4BAA4BL,MAAM,IAAK,CAC/CM,UAAU,EACVC,SAAS,IAEb,IAAM/E,EAAa,CAAC,CAChByD,GAAI,IACJ3D,KAAM,aACP,CACC2D,GAAI,IACJ3D,KAAM,WACP,CACC2D,GAAI,IACJ3D,KAAM,WAEVsE,EAAKG,MAAM,mBAAmBC,MAAM,IAAKxE,GACzCoE,EAAKS,OAAO,mBAAmBL,MAAM,KAAM,MAC3C,IAAMQ,EAAW,CAAC,CACdvB,GAAI,IACJ3D,KAAM,eACNmF,OAAQ,EACRC,MAAO,KACPlF,WAAYA,EAAWmF,MAAM,EAAG,IACjC,CACC1B,GAAI,IACJ3D,KAAM,eACNmF,OAAQ,EACRC,MAAO,MACR,CACCzB,GAAI,IACJ3D,KAAM,eACNmF,OAAQ,EACRC,MAAO,KACR,CACCzB,GAAI,IACJ3D,KAAM,eACNmF,OAAQ,GACRC,MAAO,OAEXd,EAAKG,MAAM,mCAAmCC,MAAM,IAAKQ,GACzDZ,EAAKG,MAAM,yBAAyBC,OAAM,SAAAY,GACtC,IAAMC,EAAMD,EAAOC,IACb5B,EAAK4B,EAAIC,UAAUD,EAAIE,YAAY,KAAO,GAChD,MAAO,CAAC,IAAKvF,EAAWwF,OAAO/B,EAAK,QAExCW,EAAKG,MAAM,uBAAuBC,OAAM,SAAAY,GACpC,IAAMC,EAAMD,EAAOC,IACb5B,EAAK4B,EAAIC,UAAUD,EAAIE,YAAY,KAAO,GAChD,MAAO,CAAC,IAAKP,EAASQ,OAAO/B,EAAK,QAEtCW,EAAKS,OAAO,iBAAiBL,MAAM,IAAK,KAAM,CAC1C,SAAY,gDAEhBJ,EAAKqB,MAAM,uBAAuBjB,MAAM,KACxCJ,EAAKsB,SAAS,uBAAuBlB,MAAM,KAC3CJ,EAAKqB,MAAM,mBAAmBjB,MAAM,KACpCJ,EAAKsB,SAAS,mBAAmBlB,MAAM,KACvCJ,EAAKS,OAAO,eAAeL,MAAM,IAAK,KAAM,CAACmB,SAAU,8CACvDvB,EAAKG,MAAM,qBAAqBC,MAAM,IAAK,CACvCf,GAAI,EACJmC,QAAS,aACTC,MAAO,CAAC,CACJpC,GAAI,EACJtD,QAAS6E,EAAS,GAClBC,OAAQ,GACT,CACCxB,GAAI,EACJtD,QAAS6E,EAAS,GAClBC,OAAQ,MAWb,SAASa,IACZ,IAAM7C,EAAS,CACXS,KAAMlC,EAAWE,iBAErB,OAAO,SAACqE,GAEJ,OADAA,EAAS/C,EAAmBC,IACrBY,EAAMmC,IAAN,UAAahC,EAAb,oBACFiC,MAAK,SAAAC,GAAI,OAAIH,GD1FYI,EC0FmBD,EAAKC,KDzFnD/C,EAAmB,CACtBM,KAAMlC,EAAWE,gBACjB1B,WAAYmG,MAHb,IAA+BA,KC2FzBC,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WAKnE,SAASG,EAAa9C,GACzB,IAAMP,EAAS,CACXS,KAAMlC,EAAWS,eAErB,OAAO,SAAA8D,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAMmC,IAAN,UAAahC,EAAb,2BAA0CR,IAC5CyC,MAAK,SAAAC,GAAI,OAAIH,GDzEU9F,ECyEmBiG,EAAKC,KDxEjD/C,EAAmB,CACtBM,KAAMlC,EAAWS,cACjBhC,eAHD,IAA6BA,KC0EvBmG,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WAKnE,SAASI,EAAqB/C,GACjC,IAAMP,EAAS,CACXS,KAAMlC,EAAWG,wBAErB,OAAO,SAAAoE,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAMmC,IAAN,UAAahC,EAAb,2BAA0CR,EAA1C,cACFyC,MAAK,SAAAC,GAAI,OAAIH,GDrHkBI,ECqHmBD,EAAKC,KDpHzD/C,EAAmB,CACtBM,KAAMlC,EAAWG,uBACjBqD,SAAUmB,MAHX,IAAqCA,KCsH/BC,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WAKnE,SAASK,EAAM7B,EAAU8B,GAC5B,IAAMxD,EAAS,CACXS,KAAMlC,EAAWI,OAErB,OAAO,SAAAmE,GACHA,EAAS/C,EAAmBC,IAC5B,IAAMzC,EAAS,IAAIkG,gBAGnB,OAFAlG,EAAOmG,OAAO,WAAYhC,GAC1BnE,EAAOmG,OAAO,WAAYF,GACnB5C,EAAM+C,KAAN,UAAc5C,EAAd,2BAAmDxD,GACrDyF,MAAK,SAACC,GACH,OAAIA,EAAKC,KAAKrB,UACViB,EAASpC,EAAe,CAACC,QAAS,oBAAqBF,KAAM,aACtDqC,EAASc,OAEhBd,EAAS1C,EAAmBJ,EAAQiD,EAAKC,KAAKvC,UACvCmC,EAASpC,EAAe,CAACC,QAASsC,EAAKC,KAAKvC,QAASF,KAAM,gBAGzE0C,OAAM,SAAA9C,GAAK,OAAIyC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WAIxE,SAASU,IACZ,IAAM5D,EAAS,CACXS,KAAMlC,EAAWC,WAErB,OAAO,SAAAsE,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAMmC,IAAN,UAAahC,EAAb,uBACFiC,MAAK,SAAAC,GAAI,OAAIH,GD3KMI,EC2KmBD,EAAKC,KD1K7C/C,EAAmB,CACtBM,KAAMlC,EAAWC,UACjBqF,KAAMX,MAHP,IAAyBA,KC4KnBC,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WAKnE,SAASY,IACZ,IAAM9D,EAAS,CACXS,KAAMlC,EAAWK,QAErB,OAAO,SAAAkE,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAM+C,KAAN,UAAc5C,EAAd,6BACFiC,MAAK,kBAAMF,EDtKb3C,EAAmB,CACtBM,KAAMlC,EAAWK,aCsKZoE,MAAK,WAGF,OAFAnF,EAAQG,aAAarB,EAAOC,MAC5BmH,OAAOrB,SAASsB,SACTlB,EAASpC,EAAe,CAACC,QAAS,qBAAsBF,KAAM,gBAExE0C,OAAM,SAAA9C,GAAK,OAAIyC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WAuBxE,SAASjG,EAAeJ,GAC3B,IAAMmD,EAAS,CACXS,KAAMlC,EAAWO,iBAErB,OAAO,SAAAgE,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAM+C,KAAN,UAAc5C,EAAd,mBAA2C,CAAClE,SAC9CmG,MAAK,kBAAMF,EDpMb3C,EAAmB,CACtBM,KAAMlC,EAAWO,sBCoMZkE,MAAK,kBAAMnF,EAAQG,aAAarB,EAAOC,SACvCoG,MAAK,kBAAMF,EAASD,QACpBM,OAAM,SAAA9C,GACCA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAEzEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WAK5D,SAASe,EAAYC,GACxB,IAAMlE,EAAS,CACXS,KAAMlC,EAAWU,cAErB,OAAO,SAAA6D,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAMmC,IAAN,UAAahC,EAAb,yBAAwCmD,IAC1ClB,MAAK,SAAAC,GAAI,OAAIH,GDnMS5F,ECmMmB+F,EAAKC,KDlMhD/C,EAAmB,CACtBM,KAAMlC,EAAWU,aACjB/B,cAHD,IAA4BA,KCoMtBiG,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WA0B1E,SAASiB,EAAsBlB,GAC3B,IAAMP,EAAWO,EAAKmB,QAAL,SACjB,OAAO1B,EAASL,UAAUK,EAASJ,YAAY,KAAO,GAyCnD,SAAS+B,EAAUC,EAAMT,GAC5B,IAAM7D,EDvQH,SAAwBsE,GAC3B,MAAO,CACH7D,KAAMlC,EAAWc,YACjBiF,QCoQWC,CAAeD,GAC9B,OAAKT,EAME,SAAAf,GAGH,OAFAA,EAAS9C,GAEFY,EAAM4D,IAAN,UAAazD,EAAb,mBAA0CuD,GAC5CtB,MAAK,kBAAMF,EAASpC,EAAe,CAACC,QAAS,6BAA8BF,KAAM,aACjF0C,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WAd3D,SAAAJ,GAEH,OADAA,EAAS9C,GACF8C,EAASpC,EAAe,CAACC,QAAS,6BAA8BF,KAAM,WAiBlF,SAASgE,EAAeH,EAAMT,GACjC,IAAM7D,EDtRH,SAA6BsE,GAChC,MAAO,CACH7D,KAAMlC,EAAWe,iBACjBgF,QCmRWI,CAAoBJ,GACnC,OAAKT,EAME,SAAAf,GAIH,OAFAA,EAAS9C,GAEFY,EAAM+D,OAAN,UAAgB5D,EAAhB,mBAA6C,CAACmC,KAAMoB,IACtDtB,MAAK,kBAAMF,EAASpC,EAAe,CAACC,QAAS,+BAAgCF,KAAM,aACnF0C,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WAf3D,SAAAJ,GAEH,OADAA,EAAS9C,GACF8C,EAASpC,EAAe,CAACC,QAAS,+BAAgCF,KAAM,WAwCpF,SAASmE,EAAUC,GACtB,IAAM7E,EAAS,CACXS,KAAMlC,EAAWiB,YAErB,OAAO,SAAAsD,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAMmC,IAAN,UAAahC,EAAb,uBAAsC8D,IACxC7B,MAAK,SAAAC,GAAI,OAAIH,GDlUOzF,ECkUmB4F,EAAKC,KDjU9C/C,EAAmB,CACtBM,KAAMlC,EAAWiB,WACjBnC,YAHD,IAA0BA,KCmUpB8F,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,W,gFC9ZpE4B,G,4MAYFC,gBAAkB,SAACC,EAAKC,GAGpB,OAFA,EAAKC,MAAM5E,eAAe0E,GAC1BC,EAAEE,kBACK,G,uDAPX,WACIjH,KAAKgH,MAAMrC,mB,oBASf,WACI,OAAO,gBAACuC,GAAA,EAAD,WACH,eAACC,GAAA,EAAD,UACI,+CAEJ,eAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,UACKrH,KAAKsH,6B,+BAMtB,WACI,OAAOtH,KAAKgH,MAAMnI,WAAW0I,KAAI,SAAAT,GAAG,OAAI,eAACU,GAAA,EAAD,UAA4B,eAAC,KAAD,CAChEC,GAAIrI,EAAcX,EAAOK,SAASF,KAAM,CAACyD,WAAYyE,EAAIxE,KADO,SACAwE,EAAInI,QADZmI,EAAIxE,W,GAhC7CoF,IAAMC,WAqClBC,iBAAQ,SAAAC,GACnB,MAAO,CACHhJ,WAAYgJ,EAAMhJ,eAEvB,SAAA+F,GACC,MAAO,CACHD,eAAgB,kBAAMC,EAASD,MAC/BvC,eAAgB,SAACtD,GAAD,OAAc8F,EAASxC,EAAetD,QAP/C8I,CASZhB,I,gDCjDYkB,GAPG,CACdC,WAAY,QAEZC,sBAAuB,EACvBC,wBAAyB,KCsCdL,iBAAQ,SAAAC,GACnB,MAAO,CACHlC,KAAMkC,EAAMlC,QAFLiC,EAjCC,SAACZ,GACb,IAAMkB,EAAWlB,EAAMrB,KAAOqB,EAAMrB,KAAKlC,KAAO,GAChD,OAAO,iCAAK,eAAC0E,GAAA,EAAD,CAAWC,OAAO,EAAlB,SACR,gBAACC,GAAA,EAAD,CAAWD,OAAO,EAAlB,UACI,wDACA,wBACA,oBAAGE,UAAU,OAAb,0DAKJ,eAAC,aAAD,CAAWC,SAAUT,GAAUC,WAAYS,OAAQN,EAAnD,SACI,gBAAChB,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,UACI,0CAEJ,eAACC,GAAA,EAAD,UACI,gBAACqB,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMjJ,EAAQG,aAAarB,EAAOM,iBAAnE,6BAEA,eAAC2J,GAAA,EAAD,CAAQC,MAAM,UAAUC,QAAS,kBAAMjJ,EAAQG,aAAarB,EAAOQ,gBAAnE,4C,SCxBlB4J,I,OAAO,SAAC7B,GACV,OAAO,sBAAKsB,UAAU,OAAf,SACH,uBAAKA,UAAU,oBAAf,UACI,sBAAKQ,MAAO,CAACC,MAAO,GAAIC,OAAQ,GAAIC,OAAQ,QAA5C,SACI,eAAC,cAAD,CAAYN,MAAM,UAAUO,KAAM,OAEtC,sBAAKZ,UAAU,kBAAf,SAAkCtB,EAAMmC,cASpDN,GAAKO,aAAe,CAChBD,KAAM,eAGKN,UCxBA,OAA0B,oCCYnCQ,I,mNA2BFC,eAAiB,WACb3J,EAAQG,aAAarB,EAAOQ,gB,EAGhCsK,aAAe,SAACvK,GACZW,EAAQG,aAAarB,EAAOO,QAAS,CAACgH,UAAWhH,EAAQsD,M,uDArB7D,WACI,IAAMkH,EAAQxJ,KAAKgH,MAAMyC,MAAMpK,OAAOgD,WACjCrC,KAAKgH,MAAMlI,UACZkB,KAAKgH,MAAM7B,aAAaqE,GAE5BxJ,KAAKgH,MAAM0C,aAAaF,K,gCAG5B,SAAmBG,GACf,IAAMH,EAAQxJ,KAAKgH,MAAMyC,MAAMpK,OAAOgD,WAElCmH,IADcG,EAAUF,MAAMpK,OAAOgD,YAErCrC,KAAKgH,MAAM0C,aAAaF,K,oBAYhC,WACI,IAAMI,EAAU5J,KAAKgH,MAAMlI,SAAWkB,KAAKgH,MAAMlI,SAASH,KAAO,GAC7DuJ,EAAWlI,KAAKgH,MAAMrB,KAAO3F,KAAKgH,MAAMrB,KAAKlC,KAAO,GACxD,OAAO,gBAAC4E,GAAA,EAAD,CAAWD,OAAO,EAAlB,UACH,gBAACyB,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,8BAAKH,EAAU,kBAEnB,eAAC,aAAD,CAAWrB,SAAUT,GAAUC,WAAYS,OAAQN,EAAnD,SACI,eAAC4B,EAAA,EAAD,CAAKC,GAAI,EAAGzB,UAAU,aAAtB,SACI,eAACI,GAAA,EAAD,CAAQC,MAAM,UAAUO,KAAK,KAAKN,QAAS5I,KAAKsJ,eAAhD,mCAIXtJ,KAAKgK,uB,6BAId,WAAmB,IAAD,OACRnG,EAAW7D,KAAKgH,MAAMnD,SAC5B,GAAwB,IAApBA,EAASoG,OACT,OAAO,sBAAK3B,UAAU,SAAf,+DAIX,IAFA,IAAM4B,EAAW,GACbC,EAAM,GANI,WAOLC,EAAOC,GACZF,EAAIlK,KAAK,eAAC6J,EAAA,EAAD,CAAKC,GAAI,EAAT,SACL,sBAAKzB,UAAU,yBAAf,SACI,gBAACI,GAAA,EAAD,CAAQC,MAAM,OAAOC,QAAS,kBAAM,EAAKW,aAAa1F,EAASuG,KAA/D,UACI,sBAAKE,IAAKtL,GAASuL,IAAI,0BACvB,+BAAM1G,EAASuG,GAAGzL,OAClB,+BAAMkF,EAASuG,GAAGrG,MAAQ,eALZF,EAASuG,GAAG9H,KASlC8H,EAAI,GAAKA,EAAI,IAAM,IACnBF,EAASjK,KAAK,eAAC4J,EAAA,EAAD,UAAcM,GAAJC,IACxBD,EAAM,KAZLC,EAAI,EAAGC,EAAMxG,EAASoG,OAAQG,EAAIC,EAAKD,IAAM,EAA7CA,GAkBT,OAHID,EAAIF,OAAS,GACbC,EAASjK,KAAK,eAAC4J,EAAA,EAAD,UAAgCM,GAAtBtG,EAASoG,OAAS,IAEvCC,M,GA9EgBxC,IAAMC,YAkFtBC,iBAAQ,SAAAC,GACnB,MAAO,CACH/I,SAAU+I,EAAM2C,iBAChB3G,SAAUgE,EAAMhE,SAChB8B,KAAMkC,EAAMlC,SAEjB,SAAAf,GACC,MAAO,CACH8E,aAAc,SAAArH,GAAU,OAAIuC,EAASQ,EAAqB/C,KAC1D8C,aAAc,SAAA9C,GAAU,OAAIuC,EAASO,EAAa9C,QAT3CuF,CAWZyB,I,kDClGGoB,I,yDAQF,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IAOV0D,UAAY,SAAC3D,GACT,IAAM4D,EAAM,GACZA,EAAI5D,EAAE6D,OAAOjM,MAAQoI,EAAE6D,OAAOC,MAC9B,EAAKC,SAASH,IAXC,EAcnBI,OAAS,WACL,EAAK/D,MAAM3B,MAAM,EAAKwC,MAAMrE,SAAU,EAAKqE,MAAMvC,UAAUR,MAAK,kBAAM,EAAKkC,MAAMgE,cAflE,EAkBnBC,QAAU,WACN,EAAKjE,MAAMgE,WAjBX,EAAKnD,MAAQ,CACTrE,SAAU,GACV8B,SAAU,IAJC,E,0CAsBnB,WACI,OAAO,gBAAC4F,GAAA,EAAD,CAAOC,OAAQnL,KAAKgH,MAAMoE,KAA1B,UACH,eAACC,GAAA,EAAD,oBACA,gBAACC,GAAA,EAAD,WACI,eAACzB,EAAA,EAAD,CAAKvB,UAAU,WAAf,SACI,gBAACwB,EAAA,EAAD,WACI,eAACyB,GAAA,EAAD,uBACA,eAACC,GAAA,EAAD,CAAOjJ,KAAK,OAAO5D,KAAK,WAAW8M,OAAO,KAAKZ,MAAO7K,KAAK6H,MAAMrE,SAC1DkI,SAAU1L,KAAK0K,iBAG9B,eAACb,EAAA,EAAD,CAAKvB,UAAU,WAAf,SACI,gBAACwB,EAAA,EAAD,WACI,eAACyB,GAAA,EAAD,uBACA,eAACC,GAAA,EAAD,CAAOjJ,KAAK,WAAW5D,KAAK,WAAW8M,OAAO,KAAKZ,MAAO7K,KAAK6H,MAAMvC,SAC9DoG,SAAU1L,KAAK0K,iBAG9B,gBAACb,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,kBACA,eAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,gBAACtB,GAAA,EAAD,CAAeH,UAAU,gBAAzB,UACI,eAACI,GAAA,EAAD,CAAQC,MAAM,UAAUO,KAAK,KAAKN,QAAS5I,KAAK+K,OAAhD,mBACA,eAACrC,GAAA,EAAD,CAAQC,MAAM,OAAOO,KAAK,KAAKN,QAAS5I,KAAKiL,QAA7C,sC,GArDRvD,IAAMC,YA8DXC,gBAAQ,MAAM,SAAAhD,GACzB,MAAO,CACHS,MAAO,SAAC7B,EAAU8B,GAAX,OAAwBV,EAASS,EAAM7B,EAAU8B,QAFjDsC,CAIZ6C,IClEGkB,G,kDAMF,WAAY3E,GAAQ,IAAD,8BACf,cAAMA,IAMV0D,UAAY,SAAC3D,GACT,EAAK+D,SAAS,CAACnM,KAAMoI,EAAE6D,OAAOC,SARf,EAWnBe,UAAY,WACR,EAAK5E,MAAMjI,eAAe,EAAK8I,MAAMlJ,OAZtB,EAenBkN,UAAY,WACRlM,EAAQQ,oBAdR,EAAK0H,MAAQ,CACTlJ,KAAM,IAHK,E,0CAmBnB,WACI,OAAO,gBAACuI,GAAA,EAAD,WACH,eAACC,GAAA,EAAD,UACI,oDAEJ,gBAACC,GAAA,EAAD,WACI,eAACyC,EAAA,EAAD,CAAKvB,UAAU,WAAf,SACI,gBAACwB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACwB,GAAA,EAAD,mBACA,eAACC,GAAA,EAAD,CAAOjJ,KAAK,OAAOsI,MAAO7K,KAAK6H,MAAMlJ,KAAM+M,SAAU1L,KAAK0K,iBAGlE,eAACb,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,gBAACtB,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,CAAQC,MAAM,UAAUO,KAAK,KAAKN,QAAS5I,KAAK4L,UAAhD,oBACA,eAAClD,GAAA,EAAD,CAAQQ,KAAK,KAAKN,QAAS5I,KAAK6L,UAAhC,qC,GAzCCnE,IAAMC,WAkDpBC,gBAAQ,MAAM,SAAAhD,GACzB,MAAO,CACH7F,eAAgB,SAAAJ,GAAI,OAAIiG,EAAS7F,EAAeJ,QAFzCiJ,CAIZ+D,I,UCvDUG,GAAb,kDAEI,WAAY9E,GAAQ,IAAD,8BACf,cAAMA,IAgBV+E,aAAe,WACX,EAAKjB,SAAS,CAACM,MAAM,IACrB,EAAKpE,MAAMgF,eAAe,EAAKhF,MAAMvE,UAjBrC,EAAKoF,MAAQ,CACTuD,MAAM,GAHK,EAFvB,qDASI,WAAqB,IAAD,OAChBpL,KAAKiM,MAAQC,YAAW,WACpB,EAAKH,iBACNjE,GAAUG,2BAZrB,kCAeI,WACIkE,aAAanM,KAAKiM,SAhB1B,oBAwBI,WACI,IAAMxJ,EAAUzC,KAAKgH,MAAMvE,QAC3B,OAAO,eAAC2J,GAAA,EAAD,CAAOzD,MAAOlG,EAAQF,KAAM4I,OAAQnL,KAAK6H,MAAMuD,KACxCiB,OAAQrM,KAAK+L,aADpB,SACmCtJ,EAAQA,cA3B1D,GAA6BiF,aA+BdE,gBAAQ,MAAM,SAAChD,GAC1B,MAAO,CACHoH,eAAgB,SAACvJ,GAAD,OAAamC,EVwE9B,SAAwBnC,GAC3B,MAAO,CACHF,KAAMlC,EAAWmB,gBACjBiB,WU3EsCuJ,CAAevJ,QAF9CmF,CAIZkE,IC3BYlE,I,OAAAA,cAAQ,SAACC,GACpB,MAAO,CACHyE,SAAUzE,EAAMyE,YAFT1E,EARS,SAACZ,GACrB,IAAMuF,EAAQvF,EAAMsF,SAASrC,OAASnC,GAAUE,sBAAwBhB,EAAMsF,SAASrC,OAASnC,GAAUE,sBACpGkC,EAAWlD,EAAMsF,SAAStI,MAAM,EAAGuI,GACzC,OAAO,sBAAKjE,UAAW,8BAAgCiE,EAAhD,SACFrC,EAAS3C,KAAI,SAACiF,EAAGpC,GAAJ,OAAU,eAAC,GAAD,CAAiB3H,QAAS+J,GAAZpC,Y,qECFxCqC,G,kDAQF,WAAYzF,GAAQ,IAAD,8BACf,cAAMA,IAMV0F,iBAAmB,SAAC3F,GAChB,IAAI4F,EAAMtI,OAAO0C,EAAE6D,OAAOC,QACtB8B,EAAM,GAAKA,EAAM,EAAK3F,MAAMhI,QAAQ8E,UACpC6I,EAAM,GAEV,EAAK7B,SAAS,CAAC8B,UAAWD,KAZX,EAenBE,WAAa,WACT,IAAMzG,EAAO,CACTpH,QAAS,EAAKgI,MAAMhI,QACpB8E,OAAQ,EAAK+D,MAAM+E,WAEvB,EAAK5F,MAAMb,UAAUC,EAAM,EAAKY,MAAMrB,OAlBtC,EAAKkC,MAAQ,CACT+E,UAAW,GAHA,E,0CAuBnB,WACI,IAAM5N,EAAUgB,KAAKgH,MAAMhI,QAC3B,OAAO,gBAACqJ,GAAA,EAAD,CAAWD,OAAO,EAAME,UAAU,cAAlC,UACH,gBAACuB,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,sBAAKzB,UAAU,SAAf,SACI,sBAAKgC,IAAKwC,GAAYvC,IAAI,8BAGlC,gBAACT,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACF,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,8BAAI,eAACwB,GAAA,EAAD,UAAQvM,EAAQ+E,MAAQ,eAGpC,eAAC8F,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACK/J,KAAK+M,oBAGd,eAAClD,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,gBAACF,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACyB,GAAA,EAAD,CAAOjJ,KAAK,SAASkJ,OAAO,KAAKZ,MAAO7K,KAAK6H,MAAM+E,UAAW1D,KAAK,IAAI8D,IAAK,EACrEC,IAAKjN,KAAKgH,MAAMhI,QAAQ8E,OAAQ4H,SAAU1L,KAAK0M,qBAE1D,eAAC5C,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAACrB,GAAA,EAAD,CAAQC,MAAM,UAAUO,KAAK,KAAKN,QAAS5I,KAAK6M,WAAhD,wCAOxB,gBAAChD,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,+CAEJ,eAACD,EAAA,EAAD,CAAKC,GAAI,GAAIzB,UAAU,aAAvB,SACKtI,KAAKsH,8B,2BAMtB,WACI,IAAMxD,EAAS9D,KAAKgH,MAAMhI,QAAQ8E,OAClC,OAAIA,EAAS,EACF,eAACyH,GAAA,EAAD,UAAQ,aAAezH,EAAS,WAEhC,eAACyH,GAAA,EAAD,yB,+BAIf,WAAqB,IAAD,OAEhB,OADmBvL,KAAKgH,MAAMhI,QAAQH,WAAamB,KAAKgH,MAAMhI,QAAQH,WAAa,IACjE0I,KAAI,SAAAT,GAAG,OAAI,eAACoG,GAAA,EAAD,CAAoBvE,MAAM,OACnBC,QAAS,kBAAM,EAAK5B,MAAM5E,eAAe0E,IADhD,SACuDA,EAAInI,MAD/CmI,EAAIxE,W,GAxFzBoF,IAAMC,WA6FnBC,iBAAQ,SAAAC,GACnB,MAAO,CACHlC,KAAMkC,EAAMlC,SAEjB,SAAAf,GACC,MAAO,CACHxC,eAAgB,SAAAoH,GAAK,OAAI5E,EAASxC,EAAeoH,KACjDrD,UAAW,SAACC,EAAMT,GAAP,OAAgBf,EAASuB,EAAUC,EAAMT,QAP7CiC,CASZ6E,I,+CCnGGU,G,kDAmBF,WAAYnG,GAAQ,IAAD,uBACf,cAAMA,IAiBVoG,QAAU,WACN,IAAMpO,EAAUM,OAAOyC,OAAO,GAAI,EAAK8F,OACnC,EAAKwF,SACL,EAAKrG,MAAM/H,cAAcD,IAEzBA,EAAQsD,GAAK,EAAK0E,MAAMhI,QAAQsD,GAChC,EAAK0E,MAAMsG,cAActO,KAxBd,EA4BnBuO,UAAY,WACR,EAAKvG,MAAMwG,cAAc,EAAKxG,MAAMhI,UA7BrB,EAoCnByO,cAAgB,SAAC1G,GACb,EAAK+D,SAAS,CAACnM,KAAMoI,EAAE6D,OAAOC,SArCf,EAwCnB6C,aAAe,SAAC3G,GACZ,IAAM4G,EAAS,GACfA,EAAO5G,EAAE6D,OAAOjM,MAAQ0F,OAAO0C,EAAE6D,OAAOC,OACxC,EAAKC,SAAS6C,IA3CC,EA8CnBC,eAAiB,SAACC,GACd,EAAK/C,SAAS,CAACjM,WAAY,EAAKgJ,MAAMhJ,WAAWiP,OAAOD,KACpDA,EAAS5D,QACT,EAAK8D,UAAUC,QAAQC,SAjDZ,EAqDnBC,kBAAoB,SAACpP,GACjB,IAAMqP,EAAgB,EAAKtG,MAAMhJ,WAAWmF,QAC5CmK,EAAcC,OAAOD,EAAcE,QAAQvP,GAAW,GACtD,EAAKgM,SAAS,CAACjM,WAAYsP,KAtD3B,IAAMnP,EAAUgI,EAAMhI,QAFP,OAGf,EAAK6I,MAAQ,CACTlJ,KAAMK,EAAQL,KACdmF,OAAQ9E,EAAQ8E,OAChBC,MAAO/E,EAAQ+E,MACflF,WAAYG,EAAQH,YAExB,EAAKkP,UAAYrG,IAAM4G,YATR,E,sDAYnB,SAAmB3E,GACX3J,KAAKgH,MAAMhI,UAAY2K,EAAU3K,SACjCgB,KAAK8K,SAAL,gBAAkB9K,KAAKgH,MAAMhI,Y,oBAkBrC,WACI,YAAiCuP,IAA1BvO,KAAKgH,MAAMhI,QAAQsD,K,oBA0B9B,WACI,OAAO,gBAAC+F,GAAA,EAAD,CAAWD,OAAO,EAAME,UAAU,cAAlC,UACH,8BAAKtI,KAAKqN,SAAW,cAAgBrN,KAAKgH,MAAMhI,QAAQL,KAAO,cAC/D,eAACkL,EAAA,EAAD,CAAKvB,UAAU,WAAf,SACI,gBAACwB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACwB,GAAA,EAAD,mBACA,eAACC,GAAA,EAAD,CAAOjJ,KAAK,OAAOkJ,OAAO,QAAQZ,MAAO7K,KAAK6H,MAAMlJ,KAAM+M,SAAU1L,KAAKyN,qBAGjF,eAAC5D,EAAA,EAAD,CAAKvB,UAAU,WAAf,SACI,gBAACwB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACwB,GAAA,EAAD,qBACA,eAACC,GAAA,EAAD,CAAOjJ,KAAK,SAAS5D,KAAK,SAASqO,IAAK,EAAGvB,OAAO,QAAQZ,MAAO7K,KAAK6H,MAAM/D,OACrE4H,SAAU1L,KAAK0N,oBAG9B,eAAC7D,EAAA,EAAD,CAAKvB,UAAU,WAAf,SACI,gBAACwB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACwB,GAAA,EAAD,oBACA,eAACC,GAAA,EAAD,CAAOjJ,KAAK,SAAS5D,KAAK,QAAQqO,IAAK,EAAGvB,OAAO,QAAQZ,MAAO7K,KAAK6H,MAAM9D,MAAOyK,KAAM,IACjF9C,SAAU1L,KAAK0N,oBAG9B,eAAC7D,EAAA,EAAD,CAAKvB,UAAU,WAAf,SACI,gBAACwB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACwB,GAAA,EAAD,yBACA,sBAAKjD,UAAU,aAAf,SACKtI,KAAKsH,sBAEV,eAAC,KAAD,CAAWhF,GAAG,4BAA4BmM,IAAKzO,KAAK+N,UAAWtC,OAAO,KAC3DC,SAAU1L,KAAK4N,eAAgBc,QAAS1O,KAAK2O,sBAAuBC,SAAS,cAGhG,eAAC/E,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,gBAACtB,GAAA,EAAD,CAAeH,UAAU,aAAzB,UACI,eAACI,GAAA,EAAD,CAAQQ,KAAK,KAAKP,MAAM,UAAUC,QAAS5I,KAAKoN,QAAhD,mBACEpN,KAAKqN,UAAY,eAAC3E,GAAA,EAAD,CAAQQ,KAAK,KAAKP,MAAM,SAASC,QAAS5I,KAAKuN,UAA/C,gC,+BAOvC,WAAqB,IAAD,OAEhB,OADmBvN,KAAK6H,MAAMhJ,WAAamB,KAAK6H,MAAMhJ,WAAa,IACjD0I,KAAI,SAAAT,GAAG,OAAI,gBAACoG,GAAA,EAAD,CAAoBvE,MAAM,OAA1B,UAAiC,uBAC1DC,QAAS,kBAAM,EAAK5B,MAAM5E,eAAe0E,IADiB,SACVA,EAAInI,OAAY,eAAC,KAAD,CAChEkQ,KAAMC,KAASxG,UAAU,uBAAuBM,QAAS,kBAAM,EAAKsF,kBAAkBpH,QAFjDA,EAAIxE,S,iCAKjD,WACI,IAAMzD,EAAamB,KAAKgH,MAAMnI,WAAamB,KAAKgH,MAAMnI,WAAa,GAC7DkQ,EAAW/O,KAAK6H,MAAMhJ,WAAamB,KAAK6H,MAAMhJ,WAAa,GACjE,OAAOA,EAAWmQ,QAAO,SAAAlI,GAAG,YAA8CyH,IAA1CQ,EAASE,MAAK,SAAAC,GAAE,OAAIA,EAAG5M,KAAOwE,EAAIxE,a,GApIhDoF,IAAMC,WAA1BwF,GAUK/D,aAAe,CAClBpK,QAAS,CACLL,KAAM,GACNmF,OAAQ,EACRC,MAAO,EACPlF,WAAY,KAyHT+I,qBAAQ,SAAAC,GACnB,MAAO,CACHhJ,WAAYgJ,EAAMhJ,eAEvB,SAAA+F,GACC,MAAO,CACH3F,cAAe,SAAAD,GAAO,OAAI4F,EZgI3B,SAAuB5F,GAC1B,IAAM8C,EAAS,CACXS,KAAMlC,EAAWW,gBAErB,OAAO,SAAA4D,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAM+C,KAAN,UAAc5C,EAAd,iBAAyC7D,GAC3C8F,MAAK,SAAAC,GACF,IAAMzC,EAAK2D,EAAsBlB,GAEjC,OADApF,EAAQG,aAAarB,EAAOO,QAAS,CAACgH,UAAW1D,IAC1CsC,EAASpC,EAAe,CAACC,QAAS,mBAAoBF,KAAM,gBAEtE0C,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WYhJ/B/F,CAAcD,KACjDsO,cAAe,SAAAtO,GAAO,OAAI4F,EZyJ3B,SAAuB5F,GAC1B,IAAM8C,EAAS,CACXS,KAAMlC,EAAWY,gBAErB,OAAO,SAAA2D,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAM4D,IAAN,UAAazD,EAAb,yBAAwC7D,EAAQsD,IAAMtD,GACxD8F,MAAK,kBAAMF,EAASpC,EAAe,CAACC,QAAS,mBAAoBF,KAAM,gBACvEuC,MAAK,kBAAMF,EAAS3C,EAAmBH,OACvCgD,MAAK,kBAAMF,EAASmB,EAAY/G,EAAQsD,QACxC2C,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WYvK/BsI,CAActO,KACjDwO,cAAe,SAAAxO,GAAO,OAAI4F,EZ2K3B,SAAuB5F,GAC1B,IAAM8C,EAAS,CACXS,KAAMlC,EAAWa,gBAErB,OAAO,SAAA0D,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAM+D,OAAN,UAAgB5D,EAAhB,yBAA2C7D,EAAQsD,KACrDwC,MAAK,kBAAMF,EAASpC,EAAe,CAACC,QAAS,mBAAoBF,KAAM,gBACvEuC,MAAK,kBAAMF,EAAS3C,EAAmBH,OACvCgD,MAAK,kBAAMnF,EAAQQ,sBACnB8E,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WYzL/BwI,CAAcxO,KACjDoD,eAAgB,SAAAoH,GAAK,OAAI5E,EAASxC,EAAeoH,QAT1C5B,CAWZuF,IClJGgC,I,yDAQF,WAAYnI,GAAQ,IAAD,8BACf,cAAMA,IAWVoI,WAAa,SAACC,GACV,EAAKvE,SAAS,CAACwE,UAAWD,KAX1B,EAAKxH,MAAQ,CACTyH,UAAW,UAHA,E,qDAOnB,WACI,IAAMtJ,EAAYhG,KAAKgH,MAAMyC,MAAMpK,OAAO2G,UAC1ChG,KAAKgH,MAAMjB,YAAYC,K,oBAO3B,WACI,IAIIuJ,EAJEvQ,EAAUgB,KAAKgH,MAAMhI,QAC3B,OAAKA,GAKDuQ,EADAvP,KAAKgH,MAAMrB,MAAQ3F,KAAKgH,MAAMrB,KAAKlC,OAASqE,GAAUC,WAC1C/H,KAAKwP,qBAEL,eAAC,GAAD,CAAexQ,QAASA,IAEjC,gBAACqJ,GAAA,EAAD,CAAWD,OAAO,EAAlB,UACH,8BAAKpJ,EAAQL,OACZ4Q,MAVM,eAAClH,GAAA,EAAD,CAAWD,OAAO,EAAlB,SAAwB,qD,gCAcvC,WAAsB,IAAD,OACjB,OAAO,iCACH,gBAACqH,EAAA,EAAD,CAAKC,MAAM,EAAX,UACI,eAACC,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAStH,UAAWuH,KAAW,CAACC,OAAiC,WAAzB9P,KAAK6H,MAAMyH,YAC1C1G,QAAS,kBAAM,EAAKwG,WAAW,WADxC,sBAGJ,eAACO,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,CAAStH,UAAWuH,KAAW,CAACC,OAAiC,SAAzB9P,KAAK6H,MAAMyH,YAC1C1G,QAAS,kBAAM,EAAKwG,WAAW,SADxC,uBAIR,gBAACW,GAAA,EAAD,CAAYT,UAAWtP,KAAK6H,MAAMyH,UAAlC,UACI,eAACU,GAAA,EAAD,CAASX,MAAM,SAAf,SACI,eAAC,GAAD,CAAerQ,QAASgB,KAAKgH,MAAMhI,YAEvC,eAACgR,GAAA,EAAD,CAASX,MAAM,OAAf,SACI,eAAC,GAAD,CAAarQ,QAASgB,KAAKgH,MAAMhI,sB,GA1D/B0I,IAAMC,YAiEbC,iBAAQ,SAAAC,GACnB,MAAO,CACHlC,KAAMkC,EAAMlC,KACZ3G,QAAS6I,EAAM7I,YAEpB,SAAA4F,GACC,MAAO,CACHmB,YAAa,SAAAC,GAAS,OAAIpB,EAASmB,EAAYC,QAPxC4B,CASZqI,YAAWd,K,mBC7ERe,I,mNASF3G,aAAe,SAACvK,GACZW,EAAQG,aAAarB,EAAOO,QAAS,CAACgH,UAAWhH,EAAQsD,M,EAO7D6N,kBAAoB,SAAC/J,EAAMW,GACvB,GAAqC,IAAjCA,EAAE6D,OAAOC,MAAMuF,OAAOnG,OAA1B,CAGA,IAAMoG,EAAYhM,OAAO0C,EAAE6D,OAAOC,OAC9BwF,EAAYjK,EAAKtC,OACjB,EAAKkD,MAAMsJ,WAAW,CAACtR,QAASoH,EAAKpH,QAAS8E,OAAQsC,EAAKtC,OAASuM,GAAY,EAAKrJ,MAAMrB,MAE3F,EAAKqB,MAAMuJ,QAAQ,CAACvR,QAASoH,EAAKpH,QAAS8E,OAAQuM,EAAYjK,EAAKtC,QAAS,EAAKkD,MAAMrB,Q,EAIhG6K,aAAe,WACX,EAAKxJ,MAAMyJ,YAAY,EAAKzJ,MAAM9H,O,yDAjBtC,WACI,OAAOc,KAAKgH,MAAM9H,KAAKwR,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAI9M,OAAS8M,EAAI5R,QAAQ+E,QAAO,K,oBAmBtF,WACI,OAA+B,IAA3B/D,KAAKgH,MAAM9H,KAAK+K,OACT,gBAAC5B,GAAA,EAAD,CAAWD,OAAO,EAAlB,UACH,uCACA,sBAAKE,UAAU,SAAf,8CAGD,gBAACD,GAAA,EAAD,CAAWD,OAAO,EAAlB,UACH,uCACA,eAACyB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,gBAAC8G,GAAA,EAAD,CAAOC,SAAS,EAAMxI,UAAU,aAAhC,UACI,iCACA,gCACI,0CACA,yCACA,wCACA,+CAGJ,iCACCtI,KAAK+Q,wBAKlB,eAAClH,EAAA,EAAD,UACI,gBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIzB,UAAU,aAAvB,UACI,wBACA,8BAAI,eAACiD,GAAA,EAAD,UAAQ,UAAYvL,KAAKgR,sBAAwB,gBAG7D,eAACnH,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAIzB,UAAU,aAAvB,SACI,eAACI,GAAA,EAAD,CAAQC,MAAM,UAAUO,KAAK,KAAKN,QAAS5I,KAAKwQ,aAAhD,mC,0BAMhB,WAAgB,IAAD,OAEX,OADcxQ,KAAKgH,MAAM9H,KACZqI,KAAI,SAAAnB,GAAI,OAAI,gCACrB,8BAAI,eAACsC,GAAA,EAAD,CAAQC,MAAM,OAAOC,QAAS,kBAAM,EAAKW,aAAanD,EAAKpH,UAA3D,SAAsEoH,EAAKpH,QAAQL,SACvF,8BACI,eAAC6M,GAAA,EAAD,CAAOjJ,KAAK,SAASkJ,OAAO,KAAKZ,MAAOzE,EAAKtC,OAAQkJ,IAAK,EAAGC,IAAK7G,EAAKpH,QAAQ8E,OACxE4H,SAAU,SAAA3E,GAAC,OAAI,EAAKoJ,kBAAkB/J,EAAMW,QAEvD,8BAAKX,EAAKtC,OAASsC,EAAKpH,QAAQ+E,MAAQ,SACxC,8BAAI,eAAC2E,GAAA,EAAD,CAAQQ,KAAK,KAAKP,MAAM,SAASC,QAAS,kBAAM,EAAK5B,MAAMsJ,WAAWlK,IAAtE,wBAP0BA,EAAKpH,QAAQsD,W,GA3EpCoF,IAAMC,YAuFVC,iBAAQ,SAAAC,GACnB,MAAO,CACH3I,KAAM2I,EAAM3I,KACZyG,KAAMkC,EAAMlC,SAEjB,SAAAf,GACC,MAAO,CACH2L,QAAS,SAACnK,EAAMT,GAAP,OAAgBf,EAASuB,EAAUC,EAAMT,KAClD2K,WAAY,SAAClK,EAAMT,GAAP,OAAgBf,EAAS2B,EAAeH,EAAMT,KAC1D8K,YAAa,SAAC/L,GAAD,OAAWE,Ed6RzB,SAAqBF,GACxB,IAAM5C,EAAS,CACXS,KAAMlC,EAAWgB,cAErB,OAAO,SAAAuD,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAM+C,KAAN,UAAc5C,EAAd,eAAuC,CAAC6B,UAC1CI,MAAK,SAAAC,GACF,IAAMzC,EAAK2D,EAAsBlB,GACjC,OAAOpF,EAAQG,aAAarB,EAAOU,MAAO,CAACwH,QAASrE,OAEvDwC,MAAK,kBAAMF,EAAS3C,EAAmBH,OACvCgD,MAAK,kBAAMF,EAASpC,EAAe,CAACC,QAAS,iBAAkBF,KAAM,gBACrE0C,OAAM,SAAA9C,GAIH,OAHIA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAElEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,Wc9SjCyL,CAAY/L,QATtCkD,CAWZsI,ICpGGe,I,yDAOF,WAAYjK,GAAQ,IAAD,8BACf,cAAMA,IAUV0D,UAAY,SAAC3D,GACT,IAAM4D,EAAM,GACZA,EAAI5D,EAAE6D,OAAOjM,MAAQoI,EAAE6D,OAAOC,MAC9B,EAAKC,SAASH,IAdC,EA4BnBuG,UAAY,WACR,IAAMC,EAAU7R,OAAOyC,OAAO,GAAI,EAAK8F,cAChCsJ,EAAQC,gBACf,EAAKpK,MAAMqK,SAASF,GAASrM,MAAK,kBAAM,EAAKkC,MAAMgE,cA/BpC,EAkCnBC,QAAU,WACN,EAAKjE,MAAMgE,WAjCX,EAAKnD,MAAQ,CACTvE,UAAW,GACXC,SAAU,GACVC,SAAU,GACV8B,SAAU,GACV8L,gBAAiB,IAPN,E,4CAiBnB,WACI,OAAOpR,KAAK6H,MAAMvE,UAAU8M,OAAOnG,OAAS,GACxCjK,KAAK6H,MAAMtE,SAAS6M,OAAOnG,OAAS,GACpCjK,KAAK6H,MAAMrE,SAAS4M,OAAOnG,OAAS,GACpCjK,KAAK6H,MAAMvC,SAAS8K,OAAOnG,OAAS,GAAKjK,KAAKsR,oB,6BAGtD,WACI,OAAOtR,KAAK6H,MAAMvC,WAAatF,KAAK6H,MAAMuJ,kB,oBAa9C,WACI,OAAO,gBAAClG,GAAA,EAAD,CAAOC,OAAQnL,KAAKgH,MAAMoE,KAA1B,UACH,eAACC,GAAA,EAAD,oBACA,gBAACC,GAAA,EAAD,WACI,gBAACzB,EAAA,EAAD,CAAKvB,UAAU,WAAf,UACI,gBAACwB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACwB,GAAA,EAAD,yBACA,eAACC,GAAA,EAAD,CAAOjJ,KAAK,OAAO5D,KAAK,YAAY8M,OAAO,KAAKZ,MAAO7K,KAAK6H,MAAMvE,UAC3DoI,SAAU1L,KAAK0K,eAE1B,gBAACZ,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACwB,GAAA,EAAD,wBACA,eAACC,GAAA,EAAD,CAAOjJ,KAAK,OAAO5D,KAAK,WAAW8M,OAAO,KAAKZ,MAAO7K,KAAK6H,MAAMtE,SAC1DmI,SAAU1L,KAAK0K,kBAG9B,eAACb,EAAA,EAAD,CAAKvB,UAAU,WAAf,SACI,gBAACwB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACwB,GAAA,EAAD,uBACA,eAACC,GAAA,EAAD,CAAOjJ,KAAK,OAAO5D,KAAK,WAAW8M,OAAO,KAAKZ,MAAO7K,KAAK6H,MAAMrE,SAC1DkI,SAAU1L,KAAK0K,iBAG9B,gBAACb,EAAA,EAAD,CAAKvB,UAAU,WAAf,UACI,gBAACwB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACwB,GAAA,EAAD,uBACA,eAACC,GAAA,EAAD,CAAOjJ,KAAK,WAAW5D,KAAK,WAAW8M,OAAO,KAAKZ,MAAO7K,KAAK6H,MAAMvC,SAC9DoG,SAAU1L,KAAK0K,eAE1B,gBAACZ,EAAA,EAAD,CAAKC,GAAI,EAAT,UACI,eAACwB,GAAA,EAAD,+BACA,eAACC,GAAA,EAAD,CAAOjJ,KAAK,WAAW5D,KAAK,kBAAkB8M,OAAO,KAAKZ,MAAO7K,KAAK6H,MAAMuJ,gBACrE1F,SAAU1L,KAAK0K,kBAG9B,eAACb,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,gBAACtB,GAAA,EAAD,CAAeH,UAAU,mBAAzB,UACI,eAACI,GAAA,EAAD,CAAQC,MAAM,UAAUO,KAAK,KAAKN,QAAS5I,KAAKkR,UACxCK,UAAWvR,KAAKwR,WADxB,sBAEA,eAAC9I,GAAA,EAAD,CAAQC,MAAM,OAAOO,KAAK,KAAKN,QAAS5I,KAAKiL,QAA7C,qC,GArFLvD,IAAMC,YA8FdC,gBAAQ,MAAM,SAAAhD,GACzB,MAAO,CACHyM,SAAU,SAAAF,GAAO,OAAIvM,Ef2HtB,SAAkBuM,GACrB,IAAMrP,EAAS,CACXS,KAAMlC,EAAWM,UAErB,OAAO,SAAAiE,GAEH,OADAA,EAAS/C,EAAmBC,IACrBY,EAAM+C,KAAN,UAAc5C,EAAd,cAAsCsO,GACxCrM,MAAK,kBAAMF,EAAS3C,EAAmBH,OACvCgD,MAAK,kBAAMF,EAASpC,EAAe,CAACC,QAAS,2BAA4BF,KAAM,gBAC/EuC,MAAK,kBAAMF,EAASS,EAAM8L,EAAQ3N,SAAU2N,EAAQ7L,cACpDL,OAAM,SAAA9C,GACCA,EAAM+C,SAASF,KAAKvC,SACpBmC,EAASpC,EAAe,CAACC,QAASN,EAAM+C,SAASF,KAAKvC,QAASF,KAAM,YAEzEqC,EAAS1C,EAAmBJ,EAAQK,EAAM+C,SAASF,WezI7BqM,CAASF,QAFhCvJ,CAIZqJ,ICjGGQ,G,4MAYFlI,aAAe,SAACvK,GACZW,EAAQG,aAAarB,EAAOO,QAAS,CAACgH,UAAWhH,EAAQsD,M,uDAN7D,WACI,IAAMqE,EAAU3G,KAAKgH,MAAMyC,MAAMpK,OAAOsH,QACxC3G,KAAKgH,MAAMN,UAAUC,K,oBAOzB,WACI,IAAMxH,EAAQa,KAAKgH,MAAM7H,MACzB,OAAKA,EAGE,gBAACkJ,GAAA,EAAD,CAAWD,OAAO,EAAlB,UACH,8BAAK,aAAejJ,EAAMmD,KAC1B,eAACuH,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACK,YAAc,IAAI2H,KAAKvS,EAAMsF,SAASkN,qBAG/C,eAAC9H,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,gBAAC8G,GAAA,EAAD,CAAOC,SAAS,EAAMxI,UAAU,aAAhC,UACI,iCACA,gCACI,0CACA,yCACA,6CAGJ,iCACCtI,KAAK+Q,2BApBX,O,0BA4Bf,WAAgB,IAAD,OAEX,OADc/Q,KAAKgH,MAAM7H,MAAMuF,MAClB6C,KAAI,SAAAnB,GAAI,OAAI,gCACrB,8BAAI,eAACsC,GAAA,EAAD,CAAQC,MAAM,OAAOC,QAAS,kBAAM,EAAKW,aAAanD,EAAKpH,UAA3D,SAAsEoH,EAAKpH,QAAQL,SACvF,8BAAKyH,EAAKtC,SACV,8BAAKsC,EAAKtC,OAASsC,EAAKpH,QAAQ+E,MAAQ,WAHVqC,EAAKpH,QAAQsD,W,GAjDnCoF,IAAMC,WAyDXC,iBAAQ,SAAAC,GACnB,MAAO,CACH1I,MAAO0I,EAAM1I,UAElB,SAAAyF,GACC,MAAO,CACH8B,UAAW,SAAAC,GAAO,OAAI/B,EAAS8B,EAAUC,QANlCiB,CAQZ6J,IChCGG,G,kDAUF,WAAY5K,GAAQ,IAAD,8BACf,cAAMA,IAaV6K,WAAa,WACT,EAAK/G,SAAS,CAACgH,WAAW,KAfX,EAkBnBC,YAAc,WACV,EAAKjH,SAAS,CAACgH,WAAW,KAnBX,EAsBnBE,cAAgB,WACZ,EAAKlH,SAAS,CAACmH,cAAc,KAvBd,EA0BnBC,eAAiB,WACb,EAAKpH,SAAS,CAACmH,cAAc,KA3Bd,EA8BnBE,QAAU,WACN,EAAKnL,MAAMpB,UA/BI,EAkCnBwM,UAAY,WACRzS,EAAQG,aAAarB,EAAOS,OAjC5B,EAAK2I,MAAQ,CACTiK,WAAW,EACXG,cAAc,GAJH,E,qDAQnB,WACSjS,KAAKgH,MAAMrB,MACZ3F,KAAKgH,MAAMtB,a,oBA4BnB,WACI,OAAO,iCACF1F,KAAKqS,kBACN,eAAC,GAAD,IACA,uBAAK/J,UAAU,gCAAf,UACKtI,KAAKgH,MAAMsL,SAAW,eAAC,GAAD,IACvB,eAAC,GAAD,CAAOlH,KAAMpL,KAAK6H,MAAMiK,UAAW9G,QAAShL,KAAK+R,cACjD,eAAC,GAAD,CAAU3G,KAAMpL,KAAK6H,MAAMoK,aAAcjH,QAAShL,KAAKkS,iBACvD,6CACA,wBACA,gBAACrI,EAAA,EAAD,WACI,eAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,eAAC,GAAD,MAEJ,eAACD,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,gBAAC,IAAD,WACI,eAAC,IAAD,CAAOnL,KAAMH,EAAOM,eAAeH,KAAM2Q,UAAW5D,KACpD,eAAC,IAAD,CAAO/M,KAAMH,EAAOK,SAASF,KAAM2Q,UAAWlG,KAC9C,eAAC,IAAD,CAAOzK,KAAMH,EAAOQ,cAAcL,KAAM2Q,UAAWpC,KACnD,eAAC,IAAD,CAAOvO,KAAMH,EAAOO,QAAQJ,KAAM2Q,UAAWJ,KAC7C,eAAC,IAAD,CAAOvQ,KAAMH,EAAOS,KAAKN,KAAM2Q,UAAWW,KAC1C,eAAC,IAAD,CAAOtR,KAAMH,EAAOU,MAAMP,KAAM2Q,UAAWkC,KAC3C,eAAC,IAAD,CAAOc,OAAO,EAAMhD,UAAWiD,qB,6BAQvD,WACI,IAAM7M,EAAO3F,KAAKgH,MAAMrB,KACxB,OAAO,gBAAC8M,EAAA,EAAD,CAAQ9J,MAAM,QAAQ+J,OAAO,EAAMC,OAAQ,KAAMrK,UAAW,SAA5D,UACH,eAACsK,EAAA,EAAD,CAAaC,KAAK,IAAlB,iBACA,eAACpD,EAAA,EAAD,CAAKqD,QAAQ,EAAMxK,UAAU,gBAC7B,eAACmH,EAAA,EAAD,CAAKqD,QAAQ,EAAb,SACI,wBAAMxK,UAAU,OAAOyK,MAAM,OAAOnK,QAAS5I,KAAKoS,UAAlD,UACI,eAAC,KAAD,CAAiBvD,KAAMmE,OACtBhT,KAAKgH,MAAM9H,KAAK+K,OAAS,GAAK,uBAAM3B,UAAU,eAAhB,SAC9BtI,KAAKgH,MAAM9H,KAAK+K,cAKzB,eAACwF,EAAA,EAAD,CAAKqD,QAAQ,EAAb,SACI,gBAACG,EAAA,EAAD,CAAsBC,KAAK,EAAMC,UAAU,EAA3C,UACI,eAACC,EAAA,EAAD,CAAgBF,KAAK,EAAMG,OAAO,EAAlC,SACK1N,EAAOA,EAAKrC,UAAY,IAAMqC,EAAKpC,SAAW,YAEnD,gBAAC+P,EAAA,EAAD,CAAcC,OAAO,EAArB,UACKvT,KAAKwT,sBACL7N,EAAO3F,KAAKyT,oBAAsBzT,KAAK0T,gC,+BAO5D,WACI,OAAO,eAACC,EAAA,EAAD,CAAc/K,QAAS5I,KAAKmS,QAA5B,sB,8BAGX,WACI,OAAO,eAACwB,EAAA,EAAD,CAAc/K,QAAS5I,KAAK6R,WAA5B,qB,iCAGX,WACI,OAAO7R,KAAKgH,MAAMrB,KAAO,KAAO,eAACgO,EAAA,EAAD,CAAc/K,QAAS5I,KAAKgS,cAA5B,0B,GAnHjBtK,IAAMC,WAuHdC,iBAAQ,SAAAC,GACnB,MAAO,CACHyK,QAASzK,EAAMyK,QACf3M,KAAMkC,EAAMlC,KACZzG,KAAM2I,EAAM3I,SAEjB,SAAA0F,GACC,MAAO,CACHgB,OAAQ,kBAAMhB,EAASgB,MACvBF,SAAU,kBAAMd,EAASc,SATlBkC,CAWZqI,YAAW2B,K,sCC6Bd,IAAMgC,GAAcC,aAAgB,CAChCvB,QAjHJ,WAAyC,IAAxBzK,EAAuB,wDAAR/F,EAAQ,uCACpC,OAAIA,EAAOE,YACCF,EAAOE,cACNP,EAAYC,QAMlBmG,GAyGP3I,KAtEJ,WAAmC,IAArB2I,EAAoB,uDAAZ,GAAI/F,EAAQ,uCAC9B,OAAQA,EAAOS,MACX,KAAKlC,EAAWc,YACZ,IAAM2S,EAAcjM,EAAMoH,MAAK,SAAA8E,GAAE,OAAIA,EAAG/U,QAAQsD,KAAOR,EAAOsE,KAAKpH,QAAQsD,MAC3E,GAAIwR,EAAa,CACb,IAAME,EAAU1U,OAAOyC,OAAO,GAAI+R,EAAa,CAAChQ,OAAQgQ,EAAYhQ,OAAShC,EAAOsE,KAAKtC,SACnFmQ,EAAWpM,EAAM7D,QAEvB,OADAiQ,EAAS7F,OAAO6F,EAAS5F,QAAQyF,GAAc,EAAGE,GAC3CC,EAEP,IAAMA,EAAWpM,EAAM7D,QAEvB,OADAiQ,EAAShU,KAAK6B,EAAOsE,MACd6N,EAEf,KAAK5T,EAAWe,iBACZ,IAAM2N,EAAWlH,EAAMoH,MAAK,SAAA8E,GAAE,OAAIA,EAAG/U,QAAQsD,KAAOR,EAAOsE,KAAKpH,QAAQsD,MACxE,GAAIyM,EAASjL,SAAWhC,EAAOsE,KAAKtC,OAAQ,CACxC,IAAMmQ,EAAWpM,EAAM7D,QAEvB,OADAiQ,EAAS7F,OAAO6F,EAAS5F,QAAQU,GAAW,GACrCkF,EAEP,IAAMD,EAAU1U,OAAOyC,OAAO,GAAIgN,EAAU,CAACjL,OAAQiL,EAASjL,OAAShC,EAAOsE,KAAKtC,SAC7EmQ,EAAWpM,EAAM7D,QAEvB,OADAiQ,EAAS7F,OAAO6F,EAAS5F,QAAQU,GAAW,EAAGiF,GACxCC,EAEf,KAAK5T,EAAWC,UACZ,OAAIwB,EAAOE,cAAgBP,EAAYE,SAAWG,EAAO6D,KAAKzG,KACnD4C,EAAO6D,KAAKzG,KAAKwF,MAEjBmD,EAEf,KAAKxH,EAAWgB,aAChB,KAAKhB,EAAWK,OACZ,OAAIoB,EAAOE,cAAgBP,EAAYE,QAC5B,GAEAkG,EAEf,QACI,OAAOA,IA+BfhJ,WA9KJ,WAAyC,IAArBgJ,EAAoB,uDAAZ,GAAI/F,EAAQ,uCACpC,OAAQA,EAAOS,MACX,KAAKlC,EAAWE,gBACZ,OAAIuB,EAAOE,cAAgBP,EAAYE,QAC5BG,EAAOjD,WAEPgJ,EAEf,KAAKxH,EAAWK,OACZ,OAAIoB,EAAOE,cAAgBP,EAAYE,QAC5B,GAEAkG,EAEf,QACI,OAAOA,IAgKfyE,SAxGJ,WAAuC,IAArBzE,EAAoB,uDAAZ,GAAI/F,EAAQ,uCAClC,OAAQA,EAAOS,MACX,KAAKlC,EAAWkB,gBACZ,MAAM,GAAN,oBAAWsG,GAAX,CAAkB/F,EAAOW,UAC7B,KAAKpC,EAAWmB,gBACZ,IAAM0S,EAASrM,EAAM7D,MAAM,GAE3B,OADAkQ,EAAO9F,OAAO8F,EAAO7F,QAAQvM,EAAOW,SAAU,GACvCyR,EACX,QACI,OAAOrM,IAgGf1I,MA7BJ,WAAsC,IAAvB0I,EAAsB,uDAAd,KAAM/F,EAAQ,uCACjC,OAAQA,EAAOS,MACX,KAAKlC,EAAWiB,WACZ,OAAIQ,EAAOE,cAAgBP,EAAYE,QAC5BG,EAAO3C,MAEP0I,EAEf,KAAKxH,EAAWK,OACZ,OAAIoB,EAAOE,cAAgBP,EAAYE,QAC5B,KAEAkG,EAEf,QACI,OAAOA,IAef7I,QA7FJ,WAAwC,IAAvB6I,EAAsB,uDAAd,KAAM/F,EAAQ,uCACnC,OAAQA,EAAOS,MACX,KAAKlC,EAAWU,aACZ,OAAIe,EAAOE,cAAgBP,EAAYE,QAC5BG,EAAO9C,QAEP6I,EAEf,KAAKxH,EAAWK,OACZ,OAAIoB,EAAOE,cAAgBP,EAAYE,QAC5B,KAEAkG,EAEf,QACI,OAAOA,IA+EfhE,SA1IJ,WAAuC,IAArBgE,EAAoB,uDAAZ,GAAI/F,EAAQ,uCAClC,OAAQA,EAAOS,MACX,KAAKlC,EAAWG,uBACZ,OAAIsB,EAAOE,cAAgBP,EAAYE,QAC5BG,EAAO+B,SAEPgE,EAEf,KAAKxH,EAAWK,OACZ,OAAIoB,EAAOE,cAAgBP,EAAYE,QAC5B,GAEAkG,EAEf,QACI,OAAOA,IA4Hf2C,iBAhKJ,WAAiD,IAAvB3C,EAAsB,uDAAd,KAAM/F,EAAQ,uCAC5C,OAAQA,EAAOS,MACX,KAAKlC,EAAWQ,gBACZ,OAAOiB,EAAOhD,SAClB,KAAKuB,EAAWS,cACZ,OAAIgB,EAAOE,cAAgBP,EAAYE,QAC5BG,EAAOhD,SAEP+I,EAEf,KAAKxH,EAAWK,OACZ,OAAIoB,EAAOE,cAAgBP,EAAYE,QAC5B,KAEAkG,EAEf,QACI,OAAOA,IAgJflC,KAvMJ,WAAqC,IAAvBkC,EAAsB,uDAAd,KAAM/F,EAAQ,uCAChC,OAAQA,EAAOS,MACX,KAAKlC,EAAWC,UACZ,OAAIwB,EAAOE,cAAgBP,EAAYE,QAC5BG,EAAO6D,KAEPkC,EAEf,KAAKxH,EAAWK,OACZ,OAAIoB,EAAOE,cAAgBP,EAAYE,QAC5B,KAEAkG,EAEf,QACI,OAAOA,MA2LJ+L,MC/MTO,GAAmBC,0BAQVC,GAFDC,aAAYC,GAASC,aAAgBC,KAAON,KCe3CO,GARH,WACR,OAAO,eAAC,KAAD,CAAUL,MAAOM,GAAjB,SACH,eAAC,IAAD,CAAQC,QAASjV,EAAQC,SAAzB,SACI,eAAC,GAAD,SCTQiV,QACW,cAA7BhP,OAAOrB,SAASsQ,UAEe,UAA7BjP,OAAOrB,SAASsQ,UAEhBjP,OAAOrB,SAASsQ,SAASrL,MACvB,2DCXNsL,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxQ,MAAK,SAAAyQ,GACJA,EAAaC,gBAEdvQ,OAAM,SAAA9C,GACLsT,QAAQtT,MAAMA,EAAMM,c","file":"static/js/main.f0b8d927.chunk.js","sourcesContent":["const Routes = {\n    home: {name: 'home', path: '/'},\n    categories: {name: 'categories', path: '/categories'},\n    category: {name: 'category', path: '/categories/:categoryId'},\n    createCategory: {name: 'createCategory', path: '/categories/create'},\n    product: {name: 'product', path: '/products/:productId'},\n    createProduct: {name: 'createProduct', path: '/products/create'},\n    cart: {name: 'cart', path: '/cart'},\n    order: {name: 'order', path: '/order/:orderId'}\n};\n\nexport default Routes;\n","import {createHashHistory} from 'history';\nimport Routes from \"./Routes\";\n\nexport function setPathParams(path, params) {\n    Object.getOwnPropertyNames(params).forEach(n => {\n        path = path.replace(':' + n, params[n]);\n    });\n    return path;\n}\n\nconst Routing = {\n    _history: createHashHistory(),\n\n    transitionTo(route, params = {}) {\n        let path = route.path;\n        path = setPathParams(path, params);\n        this._history.push({pathname: path});\n    },\n\n    transitionToHome() {\n        this.transitionTo(Routes.home);\n    },\n\n    getHistory() {\n        return this._history;\n    }\n};\n\nexport default Routing;\n","const ActionType = {\n    LOAD_USER: 'LOAD_USER',\n    LOAD_CATEGORIES: 'LOAD_CATEGORIES',\n    LOAD_CATEGORY_PRODUCTS: 'LOAD_CATEGORY_PRODUCTS',\n    LOGIN: 'LOGIN',\n    LOGOUT: 'LOGOUT',\n    REGISTER: 'REGISTER',\n    CREATE_CATEGORY: 'CREATE_CATEGORY',\n    SELECT_CATEGORY: 'SELECT_CATEGORY',\n    LOAD_CATEGORY: 'LOAD_CATEGORY',\n    LOAD_PRODUCT: 'LOAD_PRODUCT',\n    CREATE_PRODUCT: 'CREATE_PRODUCT',\n    UPDATE_PRODUCT: 'UPDATE_PRODUCT',\n    REMOVE_PRODUCT: 'REMOVE_PRODUCT',\n    ADD_TO_CART: 'ADD_TO_CART',\n    REMOVE_FROM_CART: 'REMOVE_FROM_CART',\n    CREATE_ORDER: 'CREATE_ORDER',\n    LOAD_ORDER: 'LOAD_ORDER',\n\n    PUBLISH_MESSAGE: 'PUBLISH_MESSAGE',\n    DISMISS_MESSAGE: 'DISMISS_MESSAGE'\n};\n\nexport default ActionType;\n","const AsyncStatus = {\n    REQUEST: 'REQUEST',\n    SUCCESS: 'SUCCESS',\n    ERROR: 'ERROR'\n};\n\nexport default AsyncStatus;\n","import AsyncStatus from \"./AsyncStatus\";\nimport ActionType from \"./ActionType\";\nimport Routing from \"../util/Routing\";\nimport Routes from \"../util/Routes\";\n\n/**\n * Sync functions are just functions that return action objects which are then passed to the Redux store.\n */\n\nexport function asyncActionRequest(action) {\n    return Object.assign(action, {\n        asyncStatus: AsyncStatus.REQUEST\n    });\n}\n\nexport function asyncActionSuccess(action) {\n    return Object.assign(action, {\n        asyncStatus: AsyncStatus.SUCCESS\n    });\n}\n\nexport function asyncActionFailure(action, error) {\n    return Object.assign(action, {\n        asyncStatus: AsyncStatus.ERROR,\n        error\n    });\n}\n\nexport function loadUserSuccess(data) {\n    return asyncActionSuccess({\n        type: ActionType.LOAD_USER,\n        user: data\n    });\n}\n\nexport function loadCategoriesSuccess(data) {\n    return asyncActionSuccess({\n        type: ActionType.LOAD_CATEGORIES,\n        categories: data\n    });\n}\n\nexport function loadCategoryProductsSuccess(data) {\n    return asyncActionSuccess({\n        type: ActionType.LOAD_CATEGORY_PRODUCTS,\n        products: data\n    });\n}\n\nexport function logoutSuccess() {\n    return asyncActionSuccess({\n        type: ActionType.LOGOUT\n    });\n}\n\nexport function createCategorySuccess() {\n    return asyncActionSuccess({\n        type: ActionType.CREATE_CATEGORY\n    });\n}\n\nexport function selectCategory(category) {\n    Routing.transitionTo(Routes.category, {categoryId: category.id});\n    return {\n        type: ActionType.SELECT_CATEGORY,\n        category\n    };\n}\n\nexport function loadCategorySuccess(category) {\n    return asyncActionSuccess({\n        type: ActionType.LOAD_CATEGORY,\n        category\n    });\n}\n\nexport function loadProductSuccess(product) {\n    return asyncActionSuccess({\n        type: ActionType.LOAD_PRODUCT,\n        product\n    });\n}\n\nexport function addToLocalCart(item) {\n    return {\n        type: ActionType.ADD_TO_CART,\n        item\n    };\n}\n\nexport function removeFromLocalCart(item) {\n    return {\n        type: ActionType.REMOVE_FROM_CART,\n        item\n    };\n}\n\nexport function loadOrderSuccess(order) {\n    return asyncActionSuccess({\n        type: ActionType.LOAD_ORDER,\n        order\n    });\n}\n\nexport function publishMessage(message) {\n    return {\n        type: ActionType.PUBLISH_MESSAGE,\n        message\n    }\n}\n\nexport function dismissMessage(message) {\n    return {\n        type: ActionType.DISMISS_MESSAGE,\n        message\n    };\n}\n","import ActionType from \"./ActionType\";\nimport Axios from \"axios\";\nimport {\n    addToLocalCart,\n    asyncActionFailure,\n    asyncActionRequest,\n    asyncActionSuccess,\n    createCategorySuccess,\n    loadCategoriesSuccess,\n    loadCategoryProductsSuccess,\n    loadCategorySuccess,\n    loadOrderSuccess,\n    loadProductSuccess,\n    loadUserSuccess,\n    logoutSuccess,\n    publishMessage,\n    removeFromLocalCart,\n} from \"./SyncActions\";\nimport Routes from \"../util/Routes\";\nimport Routing from \"../util/Routing\";\nimport MockAdapter from \"axios-mock-adapter\";\n\nconst axios = Axios.create();\n\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL || \"\";\n\n/**\n * This part allows to mock server REST API so that the frontend can be developed without access to a real backend.\n */\nif (process.env.REACT_APP_MOCK_REST_API) {\n    // Mock backend REST API if the environment is configured to do so\n    const mock = new MockAdapter(axios, {delayResponse: 200});\n    // Mock current user data\n    mock.onGet('rest/users/current').reply(200, {\n        firstName: 'Catherine',\n        lastName: 'Halsey',\n        username: 'halsey@unsc.org',\n        role: 'ADMIN'\n    });\n    // Mock login return value\n    mock.onPost('/j_spring_security_check').reply(200, {\n        loggedIn: true,\n        success: true\n    });\n    const categories = [{\n        id: '1',\n        name: 'Computers'\n    }, {\n        id: '2',\n        name: 'Tablets'\n    }, {\n        id: '3',\n        name: 'Phones'\n    }];\n    mock.onGet('rest/categories').reply(200, categories);\n    mock.onPost('rest/categories').reply(2001, null);\n    const products = [{\n        id: '1',\n        name: 'HP Elite 123',\n        amount: 5,\n        price: 35000.00,\n        categories: categories.slice(0, 2)\n    }, {\n        id: '2',\n        name: 'HP Elite 124',\n        amount: 2,\n        price: 36000.00\n    }, {\n        id: '3',\n        name: 'HP Elite 543',\n        amount: 3,\n        price: 30000.00\n    }, {\n        id: '4',\n        name: 'HP Elite 555',\n        amount: 10,\n        price: 17000.00\n    }];\n    mock.onGet(/rest\\/categories\\/\\d+\\/products/).reply(200, products);\n    mock.onGet(/rest\\/categories\\/\\d+/).reply(config => {\n        const url = config.url;\n        const id = url.substring(url.lastIndexOf('/') + 1);\n        return [200, categories[Number(id - 1)]];\n    });\n    mock.onGet(/rest\\/products\\/\\d+/).reply(config => {\n        const url = config.url;\n        const id = url.substring(url.lastIndexOf('/') + 1);\n        return [200, products[Number(id - 1)]];\n    });\n    mock.onPost('rest/products').reply(201, null, {\n        'location': 'http://localhost:3000/eshop/rest/products/3'\n    });\n    mock.onPut(/rest\\/products\\/\\d+/).reply(204);\n    mock.onDelete(/rest\\/products\\/\\d+/).reply(204);\n    mock.onPut('rest/cart/items').reply(204);\n    mock.onDelete('rest/cart/items').reply(204);\n    mock.onPost('rest/orders').reply(201, null, {location: 'http://localhost:3000/eshop/rest/orders/1'});\n    mock.onGet(/rest\\/orders\\/\\d+/).reply(200, {\n        id: 1,\n        created: \"13.09.2018\",\n        items: [{\n            id: 1,\n            product: products[0],\n            amount: 1\n        }, {\n            id: 2,\n            product: products[2],\n            amount: 2\n        }]\n    });\n}\n\n/**\n * These Redux actions work asynchronously because they communicate with the backend. Their results are passed to the\n * Redux store via the dispatch function.\n */\n\n\nexport function loadCategories() {\n    const action = {\n        type: ActionType.LOAD_CATEGORIES\n    };\n    return (dispatch) => {\n        dispatch(asyncActionRequest(action));\n        return axios.get(`${SERVER_URL}rest/categories`)\n            .then(resp => dispatch(loadCategoriesSuccess(resp.data)))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    };\n}\n\nexport function loadCategory(categoryId) {\n    const action = {\n        type: ActionType.LOAD_CATEGORY\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.get(`${SERVER_URL}rest/categories/${categoryId}`)\n            .then(resp => dispatch(loadCategorySuccess(resp.data)))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    };\n}\n\nexport function loadCategoryProducts(categoryId) {\n    const action = {\n        type: ActionType.LOAD_CATEGORY_PRODUCTS\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.get(`${SERVER_URL}rest/categories/${categoryId}/products`)\n            .then(resp => dispatch(loadCategoryProductsSuccess(resp.data)))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    };\n}\n\nexport function login(username, password) {\n    const action = {\n        type: ActionType.LOGIN\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        const params = new URLSearchParams();\n        params.append('username', username);\n        params.append('password', password);\n        return axios.post(`${SERVER_URL}j_spring_security_check`, params)\n            .then((resp) => {\n                if (resp.data.loggedIn) {\n                    dispatch(publishMessage({message: 'Login successful.', type: 'success'}));\n                    return dispatch(loadUser());\n                } else {\n                    dispatch(asyncActionFailure(action, resp.data.message));\n                    return dispatch(publishMessage({message: resp.data.message, type: 'danger'}));\n                }\n            })\n            .catch(error => dispatch(asyncActionFailure(action, error.response.data)));\n    };\n}\n\nexport function loadUser() {\n    const action = {\n        type: ActionType.LOAD_USER\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.get(`${SERVER_URL}rest/users/current`)\n            .then(resp => dispatch(loadUserSuccess(resp.data)))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    };\n}\n\nexport function logout() {\n    const action = {\n        type: ActionType.LOGOUT\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.post(`${SERVER_URL}j_spring_security_logout`)\n            .then(() => dispatch(logoutSuccess()))\n            .then(() => {\n                Routing.transitionTo(Routes.home);\n                window.location.reload();\n                return dispatch(publishMessage({message: 'Logout successful.', type: 'success'}));\n            })\n            .catch(error => dispatch(asyncActionFailure(action, error.response.data)));\n    };\n}\n\nexport function register(profile) {\n    const action = {\n        type: ActionType.REGISTER\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.post(`${SERVER_URL}rest/users`, profile)\n            .then(() => dispatch(asyncActionSuccess(action)))\n            .then(() => dispatch(publishMessage({message: 'Registration successful.', type: 'success'})))\n            .then(() => dispatch(login(profile.username, profile.password)))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                dispatch(asyncActionFailure(action, error.response.data));\n            });\n    }\n}\n\nexport function createCategory(name) {\n    const action = {\n        type: ActionType.CREATE_CATEGORY\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.post(`${SERVER_URL}rest/categories`, {name})\n            .then(() => dispatch(createCategorySuccess()))\n            .then(() => Routing.transitionTo(Routes.home))\n            .then(() => dispatch(loadCategories()))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                dispatch(asyncActionFailure(action, error.response.data));\n            });\n    };\n}\n\nexport function loadProduct(productId) {\n    const action = {\n        type: ActionType.LOAD_PRODUCT\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.get(`${SERVER_URL}rest/products/${productId}`)\n            .then(resp => dispatch(loadProductSuccess(resp.data)))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    };\n}\n\nexport function createProduct(product) {\n    const action = {\n        type: ActionType.CREATE_PRODUCT\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.post(`${SERVER_URL}rest/products`, product)\n            .then(resp => {\n                const id = extractIdFromLocation(resp);\n                Routing.transitionTo(Routes.product, {productId: id});\n                return dispatch(publishMessage({message: 'Product created.', type: 'success'}));\n            })\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    };\n}\n\nfunction extractIdFromLocation(resp) {\n    const location = resp.headers['location'];\n    return location.substring(location.lastIndexOf('/') + 1);\n}\n\nexport function updateProduct(product) {\n    const action = {\n        type: ActionType.UPDATE_PRODUCT\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.put(`${SERVER_URL}rest/products/${product.id}`, product)\n            .then(() => dispatch(publishMessage({message: 'Product updated.', type: 'success'})))\n            .then(() => dispatch(asyncActionSuccess(action)))\n            .then(() => dispatch(loadProduct(product.id)))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    };\n}\n\nexport function removeProduct(product) {\n    const action = {\n        type: ActionType.REMOVE_PRODUCT\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.delete(`${SERVER_URL}rest/products/${product.id}`)\n            .then(() => dispatch(publishMessage({message: 'Product removed.', type: 'success'})))\n            .then(() => dispatch(asyncActionSuccess(action)))\n            .then(() => Routing.transitionToHome())\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    }\n}\n\nexport function addToCart(item, user) {\n    const action = addToLocalCart(item);\n    if (!user) {\n        return dispatch => {\n            dispatch(action);\n            return dispatch(publishMessage({message: 'Item added into your cart.', type: 'info'}));\n        }\n    }\n    return dispatch => {\n        dispatch(action);\n        // No loading spinner for this action, let it happen silently in the background\n        return axios.put(`${SERVER_URL}rest/cart/items`, item)\n            .then(() => dispatch(publishMessage({message: 'Item added into your cart.', type: 'info'})))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    }\n}\n\nexport function removeFromCart(item, user) {\n    const action = removeFromLocalCart(item);\n    if (!user) {\n        return dispatch => {\n            dispatch(action);\n            return dispatch(publishMessage({message: 'Item removed from your cart.', type: 'info'}));\n        }\n    }\n    return dispatch => {\n        // Now do just the local part\n        dispatch(action);\n        // No loading spinner for this action, let it happen silently in the background\n        return axios.delete(`${SERVER_URL}rest/cart/items`, {data: item})\n            .then(() => dispatch(publishMessage({message: 'Item removed from your cart.', type: 'info'})))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    }\n}\n\nexport function createOrder(items) {\n    const action = {\n        type: ActionType.CREATE_ORDER\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.post(`${SERVER_URL}rest/orders`, {items})\n            .then(resp => {\n                const id = extractIdFromLocation(resp);\n                return Routing.transitionTo(Routes.order, {orderId: id});\n            })\n            .then(() => dispatch(asyncActionSuccess(action)))\n            .then(() => dispatch(publishMessage({message: 'Order created.', type: 'success'})))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    }\n}\n\nexport function loadOrder(orderId) {\n    const action = {\n        type: ActionType.LOAD_ORDER\n    };\n    return dispatch => {\n        dispatch(asyncActionRequest(action));\n        return axios.get(`${SERVER_URL}rest/orders/${orderId}`)\n            .then(resp => dispatch(loadOrderSuccess(resp.data)))\n            .catch(error => {\n                if (error.response.data.message) {\n                    dispatch(publishMessage({message: error.response.data.message, type: 'danger'}));\n                }\n                return dispatch(asyncActionFailure(action, error.response.data));\n            });\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {loadCategories} from \"../../action/AsyncActions\";\nimport {connect} from \"react-redux\";\nimport {Card, CardBody, CardHeader, ListGroup, ListGroupItem} from \"reactstrap\";\nimport {selectCategory} from \"../../action/SyncActions\";\nimport {Link} from \"react-router-dom\";\nimport {setPathParams} from \"../../util/Routing\";\nimport Routes from \"../../util/Routes\";\n\nclass CategoryList extends React.Component {\n\n    static propTypes = {\n        categories: PropTypes.array,\n        loadCategories: PropTypes.func,\n        selectCategory: PropTypes.func\n    };\n\n    componentDidMount() {\n        this.props.loadCategories();\n    }\n\n    _selectCategory = (cat, e) => {\n        this.props.selectCategory(cat);\n        e.preventDefault();\n        return false;\n    };\n\n    render() {\n        return <Card>\n            <CardHeader>\n                <h5>Categories</h5>\n            </CardHeader>\n            <CardBody>\n                <ListGroup>\n                    {this._renderCategories()}\n                </ListGroup>\n            </CardBody>\n        </Card>;\n    }\n\n    _renderCategories() {\n        return this.props.categories.map(cat => <ListGroupItem key={cat.id}><Link\n            to={setPathParams(Routes.category.path, {categoryId: cat.id})}>{cat.name}</Link></ListGroupItem>);\n    }\n}\n\nexport default connect(state => {\n    return {\n        categories: state.categories\n    };\n}, dispatch => {\n    return {\n        loadCategories: () => dispatch(loadCategories()),\n        selectCategory: (category) => dispatch(selectCategory(category))\n    };\n})(CategoryList);\n","const Constants = {\n    ROLE_ADMIN: 'ADMIN',\n\n    MESSAGE_DISPLAY_COUNT: 5,\n    MESSAGE_DISPLAY_TIMEOUT: 4000\n};\n\nexport default Constants;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, ButtonToolbar, Card, CardBody, CardHeader, Container, Jumbotron} from \"reactstrap\";\nimport {IfGranted} from 'react-authorization';\nimport Routing from \"../util/Routing\";\nimport Routes from \"../util/Routes\";\nimport {connect} from \"react-redux\";\nimport Constants from \"../util/Constants\";\n\nconst Content = (props) => {\n    const userRole = props.user ? props.user.role : '';\n    return <div><Jumbotron fluid={true}>\n        <Container fluid={true}>\n            <h2>Welcome to EAR e-shop</h2>\n            <hr/>\n            <p className='lead'>\n                Pick a category to view products in it.\n            </p>\n        </Container>\n    </Jumbotron>\n        <IfGranted expected={Constants.ROLE_ADMIN} actual={userRole}>\n            <Card>\n                <CardHeader>\n                    <h5>Admin</h5>\n                </CardHeader>\n                <CardBody>\n                    <ButtonToolbar>\n                        <Button color='primary' onClick={() => Routing.transitionTo(Routes.createCategory)}>Create\n                            category</Button>\n                        <Button color='primary' onClick={() => Routing.transitionTo(Routes.createProduct)}>Create\n                            product</Button>\n                    </ButtonToolbar>\n                </CardBody>\n            </Card>\n        </IfGranted>\n    </div>;\n};\n\nContent.propTypes = {\n    user: PropTypes.object\n};\n\nexport default connect(state => {\n    return {\n        user: state.user\n    };\n})(Content);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {ClipLoader} from 'react-spinners';\nimport './Mask.css';\n\nconst Mask = (props) => {\n    return <div className='mask'>\n        <div className='spinner-container'>\n            <div style={{width: 32, height: 32, margin: 'auto'}}>\n                <ClipLoader color='#337ab7' size={32}/>\n            </div>\n            <div className='spinner-message'>{props.text}</div>\n        </div>\n    </div>;\n};\n\nMask.propTypes = {\n    text: PropTypes.string\n};\n\nMask.defaultProps = {\n    text: 'Please wait'\n};\n\nexport default Mask;","export default __webpack_public_path__ + \"static/media/product.30af2989.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {loadCategory, loadCategoryProducts} from \"../../action/AsyncActions\";\nimport {Button, Col, Container, Row} from 'reactstrap';\nimport product from '../../images/product.png';\nimport {IfGranted} from 'react-authorization';\nimport Constants from \"../../util/Constants\";\nimport Routes from \"../../util/Routes\";\nimport Routing from \"../../util/Routing\";\nimport './CategoryProducts.css';\n\nclass CategoryProducts extends React.Component {\n\n    static propTypes = {\n        match: PropTypes.object,\n        category: PropTypes.object,\n        products: PropTypes.array,\n        user: PropTypes.object,\n        loadProducts: PropTypes.func,\n        loadCategory: PropTypes.func\n    };\n\n    componentDidMount() {\n        const catId = this.props.match.params.categoryId;\n        if (!this.props.category) {\n            this.props.loadCategory(catId);\n        }\n        this.props.loadProducts(catId);\n    }\n\n    componentDidUpdate(prevProps) {\n        const catId = this.props.match.params.categoryId;\n        const prevCatId = prevProps.match.params.categoryId;\n        if (catId !== prevCatId) {\n            this.props.loadProducts(catId);\n        }\n    }\n\n    _createProduct = () => {\n        Routing.transitionTo(Routes.createProduct);\n    };\n\n    _openProduct = (product) => {\n        Routing.transitionTo(Routes.product, {productId: product.id});\n    };\n\n    render() {\n        const catName = this.props.category ? this.props.category.name : '',\n            userRole = this.props.user ? this.props.user.role : '';\n        return <Container fluid={true}>\n            <Row>\n                <Col md={6}>\n                    <h3>{catName + ' - Products'}</h3>\n                </Col>\n                <IfGranted expected={Constants.ROLE_ADMIN} actual={userRole}>\n                    <Col md={6} className='pull-right'>\n                        <Button color='primary' size='sm' onClick={this._createProduct}>Create Product</Button>\n                    </Col>\n                </IfGranted>\n            </Row>\n            {this._renderProducts()}\n        </Container>;\n    }\n\n    _renderProducts() {\n        const products = this.props.products;\n        if (products.length === 0) {\n            return <div className='italic'>There are currently no products in this category.</div>\n        }\n        const toRender = [];\n        let row = [];\n        for (let i = 0, len = products.length; i < len; i++) {\n            row.push(<Col md={4} key={products[i].id}>\n                <div className='center product-preview'>\n                    <Button color='link' onClick={() => this._openProduct(products[i])}>\n                        <img src={product} alt='Product visualization'/>\n                        <div>{products[i].name}</div>\n                        <div>{products[i].price + ' CZK'}</div>\n                    </Button>\n                </div>\n            </Col>);\n            if (i > 0 && i % 3 === 0) {\n                toRender.push(<Row key={i}>{row}</Row>);\n                row = [];\n            }\n        }\n        if (row.length > 0) {\n            toRender.push(<Row key={products.length + 1}>{row}</Row>);\n        }\n        return toRender;\n    }\n}\n\nexport default connect(state => {\n    return {\n        category: state.selectedCategory,\n        products: state.products,\n        user: state.user\n    };\n}, dispatch => {\n    return {\n        loadProducts: categoryId => dispatch(loadCategoryProducts(categoryId)),\n        loadCategory: categoryId => dispatch(loadCategory(categoryId))\n    };\n})(CategoryProducts);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, ButtonToolbar, Col, Input, Label, Modal, ModalBody, ModalHeader, Row} from \"reactstrap\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../action/AsyncActions\";\nimport './Login.css';\n\nclass Login extends React.Component {\n\n    static propTypes = {\n        open: PropTypes.bool,\n        onClose: PropTypes.func,\n        login: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        };\n    }\n\n    _onChange = (e) => {\n        const upd = {};\n        upd[e.target.name] = e.target.value;\n        this.setState(upd);\n    };\n\n    _login = () => {\n        this.props.login(this.state.username, this.state.password).then(() => this.props.onClose());\n    };\n\n    _cancel = () => {\n        this.props.onClose();\n    };\n\n    render() {\n        return <Modal isOpen={this.props.open}>\n            <ModalHeader>Login</ModalHeader>\n            <ModalBody>\n                <Row className='form-row'>\n                    <Col>\n                        <Label>Username</Label>\n                        <Input type='text' name='username' bsSize='sm' value={this.state.username}\n                               onChange={this._onChange}/>\n                    </Col>\n                </Row>\n                <Row className='form-row'>\n                    <Col>\n                        <Label>Password</Label>\n                        <Input type='password' name='password' bsSize='sm' value={this.state.password}\n                               onChange={this._onChange}/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={8}>&nbsp;</Col>\n                    <Col md={4}>\n                        <ButtonToolbar className='login-buttons'>\n                            <Button color='success' size='sm' onClick={this._login}>Login</Button>\n                            <Button color='link' size='sm' onClick={this._cancel}>Cancel</Button>\n                        </ButtonToolbar>\n                    </Col>\n                </Row>\n            </ModalBody>\n        </Modal>;\n    }\n}\n\nexport default connect(null, dispatch => {\n    return {\n        login: (username, password) => dispatch(login(username, password))\n    }\n})(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, ButtonToolbar, Card, CardBody, CardHeader, Col, Input, Label, Row} from \"reactstrap\";\nimport {connect} from \"react-redux\";\nimport {createCategory} from \"../../action/AsyncActions\";\nimport Routing from \"../../util/Routing\";\n\nclass CreateCategory extends React.Component {\n\n    static propTypes = {\n        createCategory: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: ''\n        };\n    }\n\n    _onChange = (e) => {\n        this.setState({name: e.target.value});\n    };\n\n    _onCreate = () => {\n        this.props.createCategory(this.state.name);\n    };\n\n    _onCancel = () => {\n        Routing.transitionToHome();\n    };\n\n    render() {\n        return <Card>\n            <CardHeader>\n                <h5>Create category</h5>\n            </CardHeader>\n            <CardBody>\n                <Row className='form-row'>\n                    <Col md={6}>\n                        <Label>Name</Label>\n                        <Input type='text' value={this.state.name} onChange={this._onChange}/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={6}>\n                        <ButtonToolbar>\n                            <Button color='success' size='sm' onClick={this._onCreate}>Create</Button>\n                            <Button size='sm' onClick={this._onCancel}>Cancel</Button>\n                        </ButtonToolbar>\n                    </Col>\n                </Row>\n            </CardBody>\n        </Card>;\n    }\n}\n\nexport default connect(null, dispatch => {\n    return {\n        createCategory: name => dispatch(createCategory(name))\n    };\n})(CreateCategory);","import * as React from 'react';\nimport {Alert} from \"reactstrap\";\nimport {connect} from 'react-redux';\nimport {dismissMessage} from \"../../action/SyncActions\";\nimport Constants from '../../util/Constants';\n\nexport class Message extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: true\n        };\n    }\n\n    componentDidMount() {\n        this.timer = setTimeout(() => {\n            this._toggleAlert();\n        }, Constants.MESSAGE_DISPLAY_TIMEOUT);\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    _toggleAlert = () => {\n        this.setState({open: false});\n        this.props.dismissMessage(this.props.message);\n    };\n\n    render() {\n        const message = this.props.message;\n        return <Alert color={message.type} isOpen={this.state.open}\n                      toggle={this._toggleAlert}>{message.message}</Alert>;\n    }\n}\n\nexport default connect(null, (dispatch) => {\n    return {\n        dismissMessage: (message) => dispatch(dismissMessage(message))\n    }\n})(Message);","import * as React from 'react';\nimport {connect} from \"react-redux\";\nimport Constants from '../../util/Constants';\nimport Message from \"./Message\";\nimport './Messages.css';\n\nexport const Messages = (props) => {\n    const count = props.messages.length < Constants.MESSAGE_DISPLAY_COUNT ? props.messages.length : Constants.MESSAGE_DISPLAY_COUNT;\n    const toRender = props.messages.slice(0, count);\n    return <div className={'message-container messages-' + count}>\n        {toRender.map((m, i) => <Message key={i} message={m}/>)}\n    </div>\n};\n\nexport default connect((state) => {\n    return {\n        messages: state.messages\n    };\n})(Messages);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Badge, Button, Col, Container, Input, Label, Row} from \"reactstrap\";\nimport productImg from \"../../images/product.png\";\nimport {selectCategory} from \"../../action/SyncActions\";\nimport {connect} from \"react-redux\";\nimport {addToCart} from \"../../action/AsyncActions\";\n\nclass ProductDetail extends React.Component {\n    static propTypes = {\n        product: PropTypes.object.isRequired,\n        user: PropTypes.object,\n        selectCategory: PropTypes.func.isRequired,\n        addToCart: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemCount: 1\n        };\n    }\n\n    _updateItemCount = (e) => {\n        let cnt = Number(e.target.value);\n        if (cnt < 1 || cnt > this.props.product.amount) {\n            cnt = 1;\n        }\n        this.setState({itemCount: cnt});\n    };\n\n    _addToCart = () => {\n        const item = {\n            product: this.props.product,\n            amount: this.state.itemCount\n        };\n        this.props.addToCart(item, this.props.user);\n    };\n\n    render() {\n        const product = this.props.product;\n        return <Container fluid={true} className='tab-content'>\n            <Row>\n                <Col md={6}>\n                    <div className='center'>\n                        <img src={productImg} alt='Product visualization'/>\n                    </div>\n                </Col>\n                <Col md={6}>\n                    <Row>\n                        <Col md={12}>\n                            <h4><Label>{product.price + ' CZK'}</Label></h4>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={12}>\n                            {this._renderAmount()}\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={12}>\n                            <Row>\n                                <Col md={2}>\n                                    <Input type='number' bsSize='sm' value={this.state.itemCount} size='3' min={1}\n                                           max={this.props.product.amount} onChange={this._updateItemCount}/>\n                                </Col>\n                                <Col md={3}>\n                                    <Button color='primary' size='sm' onClick={this._addToCart}>Add to cart</Button>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={1}>\n                    <h5>Categories</h5>\n                </Col>\n                <Col md={11} className='categories'>\n                    {this._renderCategories()}\n                </Col>\n            </Row>\n        </Container>;\n    }\n\n    _renderAmount() {\n        const amount = this.props.product.amount;\n        if (amount > 0) {\n            return <Label>{'In stock: ' + amount + ' items'}</Label>\n        } else {\n            return <Label>Sold out</Label>\n        }\n    }\n\n    _renderCategories() {\n        const categories = this.props.product.categories ? this.props.product.categories : [];\n        return categories.map(cat => <Badge key={cat.id} color='info'\n                                            onClick={() => this.props.selectCategory(cat)}>{cat.name}</Badge>);\n    }\n}\n\nexport default connect(state => {\n    return {\n        user: state.user\n    };\n}, dispatch => {\n    return {\n        selectCategory: catId => dispatch(selectCategory(catId)),\n        addToCart: (item, user) => dispatch(addToCart(item, user))\n    };\n})(ProductDetail);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Badge, Button, ButtonToolbar, Col, Container, Input, Label, Row} from 'reactstrap';\nimport {connect} from \"react-redux\";\nimport {createProduct, removeProduct, updateProduct} from \"../../action/AsyncActions\";\nimport {selectCategory} from \"../../action/SyncActions\";\nimport {Typeahead} from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faTimes} from '@fortawesome/free-solid-svg-icons';\n\nclass EditProduct extends React.Component {\n    static propTypes = {\n        product: PropTypes.object,\n        categories: PropTypes.array,\n        createProduct: PropTypes.func.isRequired,\n        updateProduct: PropTypes.func.isRequired,\n        removeProduct: PropTypes.func.isRequired,\n        selectCategory: PropTypes.func.isRequired\n    };\n\n    static defaultProps = {\n        product: {\n            name: '',\n            amount: 1,\n            price: 1.0,\n            categories: []\n        }\n    };\n\n    constructor(props) {\n        super(props);\n        const product = props.product;\n        this.state = {\n            name: product.name,\n            amount: product.amount,\n            price: product.price,\n            categories: product.categories\n        };\n        this.typeahead = React.createRef();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.product !== prevProps.product) {\n            this.setState({...this.props.product});\n        }\n    }\n\n    _onSave = () => {\n        const product = Object.assign({}, this.state);\n        if (this._isNew()) {\n            this.props.createProduct(product);\n        } else {\n            product.id = this.props.product.id;\n            this.props.updateProduct(product);\n        }\n    };\n\n    _onRemove = () => {\n        this.props.removeProduct(this.props.product);\n    };\n\n    _isNew() {\n        return this.props.product.id === undefined;\n    }\n\n    _onNameChange = (e) => {\n        this.setState({name: e.target.value});\n    };\n\n    _onNumChange = (e) => {\n        const change = {};\n        change[e.target.name] = Number(e.target.value);\n        this.setState(change);\n    };\n\n    _onAddCategory = (selected) => {\n        this.setState({categories: this.state.categories.concat(selected)});\n        if (selected.length) {\n            this.typeahead.current.clear();\n        }\n    };\n\n    _onRemoveCategory = (category) => {\n        const newCategories = this.state.categories.slice();\n        newCategories.splice(newCategories.indexOf(category), 1);\n        this.setState({categories: newCategories});\n    };\n\n    render() {\n        return <Container fluid={true} className='tab-content'>\n            <h3>{this._isNew() ? 'New product' : this.props.product.name + ' - Update'}</h3>\n            <Row className='form-row'>\n                <Col md={6}>\n                    <Label>Name</Label>\n                    <Input type='text' bsSize='small' value={this.state.name} onChange={this._onNameChange}/>\n                </Col>\n            </Row>\n            <Row className='form-row'>\n                <Col md={6}>\n                    <Label>Amount</Label>\n                    <Input type='number' name='amount' min={0} bsSize='small' value={this.state.amount}\n                           onChange={this._onNumChange}/>\n                </Col>\n            </Row>\n            <Row className='form-row'>\n                <Col md={6}>\n                    <Label>Price</Label>\n                    <Input type='number' name='price' min={0} bsSize='small' value={this.state.price} step={0.01}\n                           onChange={this._onNumChange}/>\n                </Col>\n            </Row>\n            <Row className='form-row'>\n                <Col md={6}>\n                    <Label>Categories</Label>\n                    <div className='categories'>\n                        {this._renderCategories()}\n                    </div>\n                    <Typeahead id=\"product-category-selector\" ref={this.typeahead} bsSize='sm'\n                               onChange={this._onAddCategory} options={this._getCategoriesToAdd()} labelKey='name'/>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={6}>\n                    <ButtonToolbar className='pull-right'>\n                        <Button size='sm' color='success' onClick={this._onSave}>Save</Button>\n                        {!this._isNew() && <Button size='sm' color='danger' onClick={this._onRemove}>Remove</Button>}\n                    </ButtonToolbar>\n                </Col>\n            </Row>\n        </Container>;\n    }\n\n    _renderCategories() {\n        const categories = this.state.categories ? this.state.categories : [];\n        return categories.map(cat => <Badge key={cat.id} color='info'><span\n            onClick={() => this.props.selectCategory(cat)}>{cat.name}</span><FontAwesomeIcon\n            icon={faTimes} className='remove-category-icon' onClick={() => this._onRemoveCategory(cat)}/></Badge>);\n    }\n\n    _getCategoriesToAdd() {\n        const categories = this.props.categories ? this.props.categories : [];\n        const existing = this.state.categories ? this.state.categories : [];\n        return categories.filter(cat => existing.find(cc => cc.id === cat.id) === undefined);\n    }\n}\n\nexport default connect(state => {\n    return {\n        categories: state.categories\n    }\n}, dispatch => {\n    return {\n        createProduct: product => dispatch(createProduct(product)),\n        updateProduct: product => dispatch(updateProduct(product)),\n        removeProduct: product => dispatch(removeProduct(product)),\n        selectCategory: catId => dispatch(selectCategory(catId))\n    };\n})(EditProduct);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport {loadProduct} from \"../../action/AsyncActions\";\nimport {Container, Nav, NavItem, NavLink, TabContent, TabPane} from \"reactstrap\";\nimport ProductDetail from \"./ProductDetail\";\nimport Constants from \"../../util/Constants\";\nimport EditProduct from \"./EditProduct\";\nimport './Product.css';\n\nclass Product extends React.Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        product: PropTypes.object,\n        loadProduct: PropTypes.func.isRequired,\n        user: PropTypes.object\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: 'detail'\n        };\n    }\n\n    componentDidMount() {\n        const productId = this.props.match.params.productId;\n        this.props.loadProduct(productId);\n    }\n\n    _toggleTab = (tabId) => {\n        this.setState({activeTab: tabId});\n    };\n\n    render() {\n        const product = this.props.product;\n        if (!product) {\n            return <Container fluid={true}><h3>Product detail</h3></Container>;\n        }\n        let component;\n        if (this.props.user && this.props.user.role === Constants.ROLE_ADMIN) {\n            component = this._renderProductTabs();\n        } else {\n            component = <ProductDetail product={product}/>;\n        }\n        return <Container fluid={true}>\n            <h3>{product.name}</h3>\n            {component}\n        </Container>;\n    }\n\n    _renderProductTabs() {\n        return <div>\n            <Nav tabs={true}>\n                <NavItem>\n                    <NavLink className={classNames({active: this.state.activeTab === 'detail'})}\n                             onClick={() => this._toggleTab('detail')}>Detail</NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink className={classNames({active: this.state.activeTab === 'edit'})}\n                             onClick={() => this._toggleTab('edit')}>Edit</NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={this.state.activeTab}>\n                <TabPane tabId='detail'>\n                    <ProductDetail product={this.props.product}/>\n                </TabPane>\n                <TabPane tabId='edit'>\n                    <EditProduct product={this.props.product}/>\n                </TabPane>\n            </TabContent>\n        </div>;\n    }\n}\n\nexport default connect(state => {\n    return {\n        user: state.user,\n        product: state.product\n    };\n}, dispatch => {\n    return {\n        loadProduct: productId => dispatch(loadProduct(productId))\n    };\n})(withRouter(Product));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from \"react-redux\";\nimport {addToCart, createOrder, removeFromCart} from \"../../action/AsyncActions\";\nimport {Button, Col, Container, Input, Label, Row, Table} from \"reactstrap\";\nimport Routing from \"../../util/Routing\";\nimport Routes from \"../../util/Routes\";\nimport './Cart.css';\n\nclass Cart extends React.Component {\n    static propTypes = {\n        cart: PropTypes.array.isRequired,\n        user: PropTypes.object,\n        removeItem: PropTypes.func.isRequired,\n        addItem: PropTypes.func.isRequired,\n        createOrder: PropTypes.func.isRequired\n    };\n\n    _openProduct = (product) => {\n        Routing.transitionTo(Routes.product, {productId: product.id});\n    };\n\n    _calculateCartPrice() {\n        return this.props.cart.reduce((acc, val) => acc + val.amount * val.product.price, 0);\n    }\n\n    _updateItemAmount = (item, e) => {\n        if (e.target.value.trim().length === 0) {\n            return;\n        }\n        const newAmount = Number(e.target.value);\n        if (newAmount < item.amount) {\n            this.props.removeItem({product: item.product, amount: item.amount - newAmount}, this.props.user);\n        } else {\n            this.props.addItem({product: item.product, amount: newAmount - item.amount}, this.props.user);\n        }\n    };\n\n    _createOrder = () => {\n        this.props.createOrder(this.props.cart);\n    };\n\n    render() {\n        if (this.props.cart.length === 0) {\n            return <Container fluid={true}>\n                <h3>Cart</h3>\n                <div className='italic'>Your cart is currently empty.</div>\n            </Container>;\n        }\n        return <Container fluid={true}>\n            <h3>Cart</h3>\n            <Row>\n                <Col md={12}>\n                    <Table striped={true} className='cart-items'>\n                        <thead>\n                        <tr>\n                            <th>Product</th>\n                            <th>Amount</th>\n                            <th>Price</th>\n                            <th>Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this._renderItems()}\n                        </tbody>\n                    </Table>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={12} className='pull-right'>\n                    <hr/>\n                    <h4><Label>{'Total: ' + this._calculateCartPrice() + ' CZK'}</Label></h4>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={12} className='pull-right'>\n                    <Button color='primary' size='sm' onClick={this._createOrder}>Create order</Button>\n                </Col>\n            </Row>\n        </Container>;\n    }\n\n    _renderItems() {\n        const items = this.props.cart;\n        return items.map(item => <tr key={item.product.id}>\n            <td><Button color='link' onClick={() => this._openProduct(item.product)}>{item.product.name}</Button></td>\n            <td>\n                <Input type='number' bsSize='sm' value={item.amount} min={0} max={item.product.amount}\n                       onChange={e => this._updateItemAmount(item, e)}/>\n            </td>\n            <td>{item.amount * item.product.price + ' CZK'}</td>\n            <td><Button size='sm' color='danger' onClick={() => this.props.removeItem(item)}>Remove</Button></td>\n        </tr>);\n    }\n}\n\nexport default connect(state => {\n    return {\n        cart: state.cart,\n        user: state.user\n    };\n}, dispatch => {\n    return {\n        addItem: (item, user) => dispatch(addToCart(item, user)),\n        removeItem: (item, user) => dispatch(removeFromCart(item, user)),\n        createOrder: (items) => dispatch(createOrder(items))\n    };\n})(Cart);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, ButtonToolbar, Col, Input, Label, Modal, ModalBody, ModalHeader, Row} from \"reactstrap\";\nimport {connect} from \"react-redux\";\nimport './Register.css';\nimport {register} from \"../../action/AsyncActions\";\n\nclass Register extends React.Component {\n    static propTypes = {\n        open: PropTypes.bool,\n        onClose: PropTypes.func.isRequired,\n        register: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            username: '',\n            password: '',\n            passwordConfirm: ''\n        };\n    }\n\n    _onChange = (e) => {\n        const upd = {};\n        upd[e.target.name] = e.target.value;\n        this.setState(upd);\n    };\n\n    _isValid() {\n        return this.state.firstName.trim().length > 0 &&\n            this.state.lastName.trim().length > 0 &&\n            this.state.username.trim().length > 0 &&\n            this.state.password.trim().length > 0 && this._passwordsMatch();\n    }\n\n    _passwordsMatch() {\n        return this.state.password === this.state.passwordConfirm;\n    }\n\n    _register = () => {\n        const profile = Object.assign({}, this.state);\n        delete profile.passwordConfirm;\n        this.props.register(profile).then(() => this.props.onClose());\n    };\n\n    _cancel = () => {\n        this.props.onClose();\n    };\n\n    render() {\n        return <Modal isOpen={this.props.open}>\n            <ModalHeader>Login</ModalHeader>\n            <ModalBody>\n                <Row className='form-row'>\n                    <Col md={6}>\n                        <Label>First name</Label>\n                        <Input type='text' name='firstName' bsSize='sm' value={this.state.firstName}\n                               onChange={this._onChange}/>\n                    </Col>\n                    <Col md={6}>\n                        <Label>Last name</Label>\n                        <Input type='text' name='lastName' bsSize='sm' value={this.state.lastName}\n                               onChange={this._onChange}/>\n                    </Col>\n                </Row>\n                <Row className='form-row'>\n                    <Col md={6}>\n                        <Label>Username</Label>\n                        <Input type='text' name='username' bsSize='sm' value={this.state.username}\n                               onChange={this._onChange}/>\n                    </Col>\n                </Row>\n                <Row className='form-row'>\n                    <Col md={6}>\n                        <Label>Password</Label>\n                        <Input type='password' name='password' bsSize='sm' value={this.state.password}\n                               onChange={this._onChange}/>\n                    </Col>\n                    <Col md={6}>\n                        <Label>Password confirm</Label>\n                        <Input type='password' name='passwordConfirm' bsSize='sm' value={this.state.passwordConfirm}\n                               onChange={this._onChange}/>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={12}>\n                        <ButtonToolbar className='register-buttons'>\n                            <Button color='success' size='sm' onClick={this._register}\n                                    disabled={!this._isValid()}>Register</Button>\n                            <Button color='link' size='sm' onClick={this._cancel}>Cancel</Button>\n                        </ButtonToolbar>\n                    </Col>\n                </Row>\n            </ModalBody>\n        </Modal>;\n    }\n}\n\nexport default connect(null, dispatch => {\n    return {\n        register: profile => dispatch(register(profile))\n    };\n})(Register);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Col, Container, Row, Table} from \"reactstrap\";\nimport {loadOrder} from \"../../action/AsyncActions\";\nimport {connect} from \"react-redux\";\nimport Routing from \"../../util/Routing\";\nimport Routes from \"../../util/Routes\";\n\nclass Order extends React.Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        order: PropTypes.object,\n        loadOrder: PropTypes.func.isRequired\n    };\n\n    componentDidMount() {\n        const orderId = this.props.match.params.orderId;\n        this.props.loadOrder(orderId);\n    }\n\n    _openProduct = (product) => {\n        Routing.transitionTo(Routes.product, {productId: product.id});\n    };\n\n    render() {\n        const order = this.props.order;\n        if (!order) {\n            return null;\n        }\n        return <Container fluid={true}>\n            <h3>{'Order No. ' + order.id}</h3>\n            <Row>\n                <Col md={4}>\n                    {'Created: ' + new Date(order.created).toLocaleString()}\n                </Col>\n            </Row>\n            <Row>\n                <Col md={12}>\n                    <Table striped={true} className='cart-items'>\n                        <thead>\n                        <tr>\n                            <th>Product</th>\n                            <th>Amount</th>\n                            <th>Price</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {this._renderItems()}\n                        </tbody>\n                    </Table>\n                </Col>\n            </Row>\n        </Container>;\n    }\n\n    _renderItems() {\n        const items = this.props.order.items;\n        return items.map(item => <tr key={item.product.id}>\n            <td><Button color='link' onClick={() => this._openProduct(item.product)}>{item.product.name}</Button></td>\n            <td>{item.amount}</td>\n            <td>{item.amount * item.product.price + ' CZK'}</td>\n        </tr>);\n    }\n}\n\nexport default connect(state => {\n    return {\n        order: state.order\n    };\n}, dispatch => {\n    return {\n        loadOrder: orderId => dispatch(loadOrder(orderId))\n    };\n})(Order);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Col,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Nav,\n    Navbar,\n    NavbarBrand,\n    Row,\n    UncontrolledDropdown\n} from 'reactstrap';\nimport CategoryList from \"./category/CategoryList\";\nimport Content from \"./Content\";\nimport {connect} from \"react-redux\";\nimport Mask from \"./misc/Mask\";\nimport {Route, Switch, withRouter} from \"react-router-dom\";\nimport CategoryProducts from \"./product/CategoryProducts\";\nimport Routes from \"../util/Routes\";\nimport Login from \"./login/Login\";\nimport {loadUser, logout} from \"../action/AsyncActions\";\nimport CreateCategory from \"./category/CreateCategory\";\nimport Messages from \"./message/Messages\";\nimport Product from \"./product/Product\";\nimport EditProduct from \"./product/EditProduct\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faShoppingCart} from \"@fortawesome/free-solid-svg-icons\";\nimport './MainView.css';\nimport Cart from \"./cart/Cart\";\nimport Routing from \"../util/Routing\";\nimport Register from \"./register/Register\";\nimport Order from \"./order/Order\";\n\n/**\n * This is a more traditional type of a React component - a component class.\n *\n * It can have lifecycle methods which are invoked by React itself during rendering.\n *\n * The most important method is the {@code render} method, whose return value is what React will render to the user.\n */\nclass MainView extends React.Component {\n\n    static propTypes = {\n        loading: PropTypes.bool,\n        user: PropTypes.object,\n        cart: PropTypes.array,\n        logout: PropTypes.func.isRequired,\n        loadUser: PropTypes.func.isRequired\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loginOpen: false,\n            registerOpen: false\n        };\n    }\n\n    componentDidMount() {\n        if (!this.props.user) {\n            this.props.loadUser();\n        }\n    }\n\n    _openLogin = () => {\n        this.setState({loginOpen: true});\n    };\n\n    _closeLogin = () => {\n        this.setState({loginOpen: false});\n    };\n\n    _openRegister = () => {\n        this.setState({registerOpen: true});\n    };\n\n    _closeRegister = () => {\n        this.setState({registerOpen: false});\n    };\n\n    _logout = () => {\n        this.props.logout();\n    };\n\n    _openCart = () => {\n        Routing.transitionTo(Routes.cart);\n    };\n\n    render() {\n        return <div>\n            {this._renderDropdown()}\n            <Messages/>\n            <div className='container-fluid app-container'>\n                {this.props.loading && <Mask/>}\n                <Login open={this.state.loginOpen} onClose={this._closeLogin}/>\n                <Register open={this.state.registerOpen} onClose={this._closeRegister}/>\n                <h1>EAR E-shop</h1>\n                <hr/>\n                <Row>\n                    <Col md={2}>\n                        <CategoryList/>\n                    </Col>\n                    <Col md={10}>\n                        <Switch>\n                            <Route path={Routes.createCategory.path} component={CreateCategory}/>\n                            <Route path={Routes.category.path} component={CategoryProducts}/>\n                            <Route path={Routes.createProduct.path} component={EditProduct}/>\n                            <Route path={Routes.product.path} component={Product}/>\n                            <Route path={Routes.cart.path} component={Cart}/>\n                            <Route path={Routes.order.path} component={Order}/>\n                            <Route exact={true} component={Content}/>\n                        </Switch>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n    }\n\n    _renderDropdown() {\n        const user = this.props.user;\n        return <Navbar color=\"light\" light={true} expand={\"md\"} className={\"d-flex\"}>\n            <NavbarBrand href='#'>EAR</NavbarBrand>\n            <Nav navbar={true} className=\"flex-grow-1\"/>\n            <Nav navbar={true}>\n                <span className='cart' title='Cart' onClick={this._openCart}>\n                    <FontAwesomeIcon icon={faShoppingCart}/>\n                    {this.props.cart.length > 0 && <span className='cart-content'>\n                    {this.props.cart.length}\n                    </span>\n                    }\n                </span>\n            </Nav>\n            <Nav navbar={true}>\n                <UncontrolledDropdown nav={true} inNavbar={true}>\n                    <DropdownToggle nav={true} caret={true}>\n                        {user ? user.firstName + ' ' + user.lastName : 'Options'}\n                    </DropdownToggle>\n                    <DropdownMenu right={true}>\n                        {this._renderRegisterItem()}\n                        {user ? this._renderLogoutItem() : this._renderLoginItem()}\n                    </DropdownMenu>\n                </UncontrolledDropdown>\n            </Nav>\n        </Navbar>;\n    }\n\n    _renderLogoutItem() {\n        return <DropdownItem onClick={this._logout}>Logout</DropdownItem>;\n    }\n\n    _renderLoginItem() {\n        return <DropdownItem onClick={this._openLogin}>Login</DropdownItem>;\n    }\n\n    _renderRegisterItem() {\n        return this.props.user ? null : <DropdownItem onClick={this._openRegister}>Register</DropdownItem>;\n    }\n}\n\nexport default connect(state => {\n    return {\n        loading: state.loading,\n        user: state.user,\n        cart: state.cart\n    };\n}, dispatch => {\n    return {\n        logout: () => dispatch(logout()),\n        loadUser: () => dispatch(loadUser())\n    }\n})(withRouter(MainView));\n","import ActionType from '../action/ActionType';\nimport {combineReducers} from \"redux\";\nimport AsyncStatus from \"../action/AsyncStatus\";\n\n/**\n * Reducers transform the application state based on action objects.\n *\n * Notice how each part of the state has its own reducer. This split helps to keep the code clean and readable.\n */\n\nfunction user(state = null, action) {\n    switch (action.type) {\n        case ActionType.LOAD_USER:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return action.user;\n            } else {\n                return state;\n            }\n        case ActionType.LOGOUT:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return null;\n            } else {\n                return state;\n            }\n        default:\n            return state;\n    }\n}\n\nfunction categories(state = [], action) {\n    switch (action.type) {\n        case ActionType.LOAD_CATEGORIES:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return action.categories;\n            } else {\n                return state;\n            }\n        case ActionType.LOGOUT:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return [];\n            } else {\n                return state;\n            }\n        default:\n            return state;\n    }\n}\n\nfunction selectedCategory(state = null, action) {\n    switch (action.type) {\n        case ActionType.SELECT_CATEGORY:\n            return action.category;\n        case ActionType.LOAD_CATEGORY:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return action.category;\n            } else {\n                return state;\n            }\n        case ActionType.LOGOUT:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return null;\n            } else {\n                return state;\n            }\n        default:\n            return state;\n    }\n}\n\nfunction products(state = [], action) {\n    switch (action.type) {\n        case ActionType.LOAD_CATEGORY_PRODUCTS:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return action.products;\n            } else {\n                return state;\n            }\n        case ActionType.LOGOUT:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return [];\n            } else {\n                return state;\n            }\n        default:\n            return state;\n    }\n}\n\nfunction loading(state = false, action) {\n    if (action.asyncStatus) {\n        switch (action.asyncStatus) {\n            case AsyncStatus.REQUEST:\n                return true;\n            default:\n                return false;\n        }\n    }\n    return state;\n}\n\nfunction messages(state = [], action) {\n    switch (action.type) {\n        case ActionType.PUBLISH_MESSAGE:\n            return [...state, action.message];\n        case ActionType.DISMISS_MESSAGE:\n            const newArr = state.slice(0);\n            newArr.splice(newArr.indexOf(action.message), 1);\n            return newArr;\n        default:\n            return state;\n    }\n}\n\nfunction product(state = null, action) {\n    switch (action.type) {\n        case ActionType.LOAD_PRODUCT:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return action.product;\n            } else {\n                return state;\n            }\n        case ActionType.LOGOUT:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return null;\n            } else {\n                return state;\n            }\n        default:\n            return state;\n    }\n}\n\nfunction cart(state = [], action) {\n    switch (action.type) {\n        case ActionType.ADD_TO_CART:\n            const presentItem = state.find(it => it.product.id === action.item.product.id);\n            if (presentItem) {\n                const newItem = Object.assign({}, presentItem, {amount: presentItem.amount + action.item.amount});\n                const newState = state.slice();\n                newState.splice(newState.indexOf(presentItem), 1, newItem);\n                return newState;\n            } else {\n                const newState = state.slice();\n                newState.push(action.item);\n                return newState;\n            }\n        case ActionType.REMOVE_FROM_CART:\n            const existing = state.find(it => it.product.id === action.item.product.id);\n            if (existing.amount === action.item.amount) {\n                const newState = state.slice();\n                newState.splice(newState.indexOf(existing), 1);\n                return newState;\n            } else {\n                const newItem = Object.assign({}, existing, {amount: existing.amount - action.item.amount});\n                const newState = state.slice();\n                newState.splice(newState.indexOf(existing), 1, newItem);\n                return newState;\n            }\n        case ActionType.LOAD_USER:\n            if (action.asyncStatus === AsyncStatus.SUCCESS && action.user.cart) {\n                return action.user.cart.items;\n            } else {\n                return state;\n            }\n        case ActionType.CREATE_ORDER:// Intentional fall-through\n        case ActionType.LOGOUT:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return [];\n            } else {\n                return state;\n            }\n        default:\n            return state;\n    }\n}\n\nfunction order(state = null, action) {\n    switch (action.type) {\n        case ActionType.LOAD_ORDER:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return action.order;\n            } else {\n                return state;\n            }\n        case ActionType.LOGOUT:\n            if (action.asyncStatus === AsyncStatus.SUCCESS) {\n                return null;\n            } else {\n                return state;\n            }\n        default:\n            return state;\n    }\n}\n\n/**\n * Here we combine the individual reducers into one state object. Reducer (function) names are used as names of the state\n * attributes. Therefore, our application state has an attribute called loading, cart, categories, etc.\n */\n\nconst rootReducer = combineReducers({\n    loading,\n    cart,\n    categories,\n    messages,\n    order,\n    product,\n    products,\n    selectedCategory,\n    user\n});\n\nexport default rootReducer;\n","import {applyMiddleware, createStore} from 'redux';\nimport {createLogger} from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducer/Reducers';\n\nconst loggerMiddleware = createLogger();\n\n/**\n * The store uses our reducers and some middleware libraries.\n */\n\nconst store = createStore(reducer, applyMiddleware(thunk, loggerMiddleware));\n\nexport default store;\n","import React from 'react';\nimport './App.css';\nimport {Router} from \"react-router-dom\";\nimport Routing from \"./util/Routing\";\nimport MainView from './component/MainView';\nimport appStore from \"./store/Store\";\nimport {Provider} from \"react-redux\";\n\n/**\n * This is the second type of component in React - a functional component.\n *\n * When not considering state and lifecycle, React components are basically functions. They take properties (optional)\n * and return what should be rendered. Therefore, the simplest way of defining a component is to use a function which\n * returns stuff to render.\n *\n * The XML-like syntax is called JSX and it is transpiled into plain JavaScript. React contains predefined components\n * representing basic HTML elements like {@code div, a, p} etc. Additional components are defined by developers.\n */\nconst App = () => {\n    return <Provider store={appStore}>\n        <Router history={Routing._history}>\n            <MainView/>\n        </Router>\n    </Provider>;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}